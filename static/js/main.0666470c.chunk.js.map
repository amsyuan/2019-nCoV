{"version":3,"sources":["component/BarChart.js","component/Phylogeny.js","component/MyHeader.js","component/MyFooter.js","component/ChinaMap.js","component/WorldMap.js","component/Haplotype.js","component/Mutation.js","component/TreeMutation.js","App.js","serviceWorker.js","index.js"],"names":["Component","Phylogeny","this","drawTree","tree_coloring_scheme","d3","category20","tree","phylotree","svg","document","getElementById","append","radial","options","node_span","node","size","node_circle_size","branch_name","name","split","style_edges","dom_element","edge_object","style","country","target","style_nodes","node_color","selectAll","standard_label","newick_parser","layout","$","on","e","prop","placenodes","update","remove","cluster_colors","data","domain","sort","map","d","enter","classed","exit","each","text","id","MyHeader","province","props","className","color","MyFooter","href","getObjectKeys","object","keys","property","push","getObjectValues","values","getCuredValues","tooltip","getDeadValues","ChinaMap","onChartClick","params","state","current_province","echartsReact","getEchartsInstance","setOption","getOption","_onEvents","totalData","cases_day_province","fetch","then","response","json","setState","china","console","log","catch","animation","title","subtext","left","trigger","formatter","tip","legend","orient","visualMap","show","type","pieces","top","calculable","toolbox","feature","dataView","readOnly","restore","saveAsImage","grid","width","geo","roam","label","normal","fontSize","emphasis","regions","value","itemStyle","opacity","yAxis","boundaryGap","splitLine","axisLine","axisTick","xAxis","alignWithLabel","series","z","showLegendSymbol","geoIndex","position","yAxisIndex","getData","ref","option","notMerge","onEvents","WorldMap","current_country","totalData1","totalData2","totalData3","cases_day_country","world","right","Haplotype","graph","colorCustom","nodes","links","a","pieChart","uniqueCountry","forEach","c","concat","countCount","Array","from","Set","b","indexOf","radius","percent","i","count","NodePieBuilder","nodeElement","percentages","insert","attr","drawParentCircle","arc","Math","PI","percentToDraw","pie","p","innerRadius","outerRadius","startAngle","endAngle","drawPieChart","labelText","String","drawTitleText","call","container","parentNode","parseInt","height","aspect","resize","targetWidth","round","window","g","zoom","transform","lineScale","distance","range","nodeScale","sqrt","link","source","force","linkDistance","gravity","charge","x","y","start","parentNodeColor","outerStrokeWidth","showLabelText","groups","groupsEnter","drawhap","class","Mutation","draw","margin","myGroups","myVars","acc_id","xScale","ordinal","rangeBands","xTicks","filter","axis","scale","tickValues","tickSize","yScale","colors2","rangeBand","html","mutation_ann","head","pageX","pageY","array_data","gridSize","floor","colors","tests","error","colorScale","quantile","buckets","G","MIN","PTS","FGM","FGA","FGP","FTM","FTA","FTP","P3PM","P3PA","P3PP","ORB","DRB","TRB","AST","STL","BLK","TO","PF","heatMap","transition","duration","TreeMutation","App","state1","state2","Layout","Header","Footer","Sider","Content","TabPane","Tabs","defaultActiveKey","tab","key","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0666470c.chunk.js","sourcesContent":["/**\n * Created by Yuan on 3/25/20.\n */\n\nimport React, {Component} from 'react';\nimport * as d3 from \"d3\";\n\n\n\nclass BarChart extends Component {\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    drawChart() {\n\n        const data = this.props.data;\n\n        //const data = [12, 5, 6, 6, 9, 10];\n\n        /*const svg = d3.select(\"body\")\n            .append(\"svg\")\n            .attr(\"width\", w)\n            .attr(\"height\", h)\n            .style(\"margin-left\", 100);*/\n\n        const svg = d3.select(document.getElementById('d3-bar')).append(\"svg\")\n            .attr(\"width\", this.props.width)\n            .attr(\"height\", this.props.height);\n\n        svg.selectAll(\"rect\")\n            .data(data)\n            .enter()\n            .append(\"rect\")\n            .attr(\"x\", (d, i) => i * 70)\n            .attr(\"y\", (d, i) => this.props.height - 10 * d)\n            .attr(\"width\", 65)\n            .attr(\"height\", (d, i) => d * 10)\n            .attr(\"fill\", \"green\")\n\n        svg.selectAll(\"text\")\n            .data(data)\n            .enter()\n            .append(\"text\")\n            .text((d) => d)\n            .attr(\"x\", (d, i) => i * 70)\n            .attr(\"y\", (d, i) => this.props.height - (10 * d) - 3)\n    }\n    render(){\n        return <div id='d3-bar'></div>\n        /*return <div id={\"#\" + this.props.id}></div>*/\n    }\n}\n\nexport default BarChart;\n","/**\n * Created by Yuan on 3/25/20.\n */\n\n/*import React, {Component} from 'react';\n\n/*import {d3,layout, tmp} from \"tmp\"*/\n\n//import Phylotree from \"react-phylotree\";\n\n//import {phylotree} from \"phylotree\";\n\n\n\n\n/*async function getd3() {\n    const d3 = window.d3 = await require('d3');\n    await require('phylotree').catch(() => {});\n    console.log(d3)\n    return d3;\n}*/\n\n\nimport React, {Component} from 'react';\n\nimport * as d3 from \"d3\";\n\nimport _ from \"underscore\"\n\nimport {phylotree} from \"phylotree\";\n\nimport $ from \"jquery\"\n\n\n//var d3 = require(\"d3\");\n\n//require(\"phylotree\");\n//require(\"phylotree/build/phylotree.css\");\n\n\nclass Phylogeny extends Component {\n\n    componentDidMount() {\n        //this.drawChart();\n\n        /*function loadTreeFromURL(url) {\n            d3.text(url, function(error, newick) {\n\n                drawATree(newick);\n                loadAnnotationFromURL(\"annotation.csv\");\n            });\n        }*/\n\n        this.drawTree();\n    }\n\n    /*drawChart() {\n\n        //const data = this.props.data;\n\n        const data = [12, 5, 6, 6, 9, 10];\n        const width = 1200\n        const height = 600\n\n\n        const svg = d3.select(document.getElementById('d3-bar')).append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height);\n\n        svg.selectAll(\"rect\")\n            .data(data)\n            .enter()\n            .append(\"rect\")\n            .attr(\"x\", (d, i) => i * 70)\n            .attr(\"y\", (d, i) => height - 10 * d)\n            .attr(\"width\", 65)\n            .attr(\"height\", (d, i) => d * 10)\n            .attr(\"fill\", \"green\")\n\n        svg.selectAll(\"text\")\n            .data(data)\n            .enter()\n            .append(\"text\")\n            .text((d) => d)\n            .attr(\"x\", (d, i) => i * 70)\n            .attr(\"y\", (d, i) => height - (10 * d) - 3)\n    }\n\n    render(){\n        return <div id='d3-bar'></div>\n\n    }*/\n\n    drawTree()\n    {\n\n\n        const tree_width = 600\n        const tree_height = 800\n\n\n        //var example_tree = \"(((EELA:0.150276,CONGERA:0.213019):0.230956,(EELB:0.263487,CONGERB:0.202633):0.246917):0.094785,((CAVEFISH:0.451027,(GOLDFISH:0.340495,ZEBRAFISH:0.390163):0.220565):0.067778,((((((NSAM:0.008113,NARG:0.014065):0.052991,SPUN:0.061003,(SMIC:0.027806,SDIA:0.015298,SXAN:0.046873):0.046977):0.009822,(NAUR:0.081298,(SSPI:0.023876,STIE:0.013652):0.058179):0.091775):0.073346,(MVIO:0.012271,MBER:0.039798):0.178835):0.147992,((BFNKILLIFISH:0.317455,(ONIL:0.029217,XCAU:0.084388):0.201166):0.055908,THORNYHEAD:0.252481):0.061905):0.157214,LAMPFISH:0.717196,((SCABBARDA:0.189684,SCABBARDB:0.362015):0.282263,((VIPERFISH:0.318217,BLACKDRAGON:0.109912):0.123642,LOOSEJAW:0.397100):0.287152):0.140663):0.206729):0.222485,(COELACANTH:0.558103,((CLAWEDFROG:0.441842,SALAMANDER:0.299607):0.135307,((CHAMELEON:0.771665,((PIGEON:0.150909,CHICKEN:0.172733):0.082163,ZEBRAFINCH:0.099172):0.272338):0.014055,((BOVINE:0.167569,DOLPHIN:0.157450):0.104783,ELEPHANT:0.166557):0.367205):0.050892):0.114731):0.295021)\"\n        // tree from Yokoyama et al http://www.ncbi.nlm.nih.gov/pubmed/18768804\n\n        var example_tree = \"(('EPI_ISL_404895|hCoV-19/USA/WA1/2020|USA|Washington|SnohomishCounty|2020-01-19':0.0,(('EPI_ISL_415584|hCoV-19/Canada/BC_41851/2020|Canada|BritishColumbia||2020-03-02':9.999999999994822E-9,'EPI_ISL_418821|hCoV-19/Canada/BC_3968175/2020|Canada|BritishColumbia||2020-03-10':0.0):0.0,(('EPI_ISL_417477|hCoV-19/USA/MN41-MDH41/2020|USA|Minnesota||2020-03-12':3.399000000000002E-5,('EPI_ISL_426363|hCoV-19/Mexico/CDMX-INCMNSZ_03/2020|Mexico|MexicoCity||2020-03-12':6.799999999999997E-5,('EPI_ISL_419823|hCoV-19/Australia/VIC130/2020|Australia|Victoria||2020-03-21':1.0200000000000004E-4,(('EPI_ISL_417615|hCoV-19/Iceland/287/2020|Iceland|Reykjavik||2020-03-18':3.399999999999996E-5,'EPI_ISL_417717|hCoV-19/Iceland/195/2020|Iceland|Reykjavik||2020-03-16':1.0000000000049032E-8):1.0200999999999998E-4,('EPI_ISL_419782|hCoV-19/Australia/VIC68/2020|Australia|Victoria||2020-03-13':3.399000000000002E-5,'EPI_ISL_417031|hCoV-19/Australia/QLDID919/2020|Australia|Queensland|GoldCoast|2020-03-11':0.0):9.999999999994822E-9):0.0):0.0):0.0):3.401000000000001E-5,('EPI_ISL_426129|hCoV-19/USA/WA-UW-2247/2020|USA|Washington||2020-03-24':3.3980000000000024E-5,(('EPI_ISL_417353|hCoV-19/USA/WA-UW204/2020|USA|Washington||2020-03-13':3.401000000000001E-5,('EPI_ISL_417081|hCoV-19/USA/WA-S28/2020|USA|Washington|SnohomishCounty|2020-03-02':0.0,'EPI_ISL_416447|hCoV-19/USA/WA-UW91/2020|USA|Washington||2020-03-10':3.400000000000001E-5):0.0):3.399000000000002E-5,('EPI_ISL_424249|hCoV-19/USA/UN-UW-1791/2020|USA|||2020-03-20':3.399000000000002E-5,(('EPI_ISL_417075|hCoV-19/USA/WA-S22/2020|USA|Washington|SnohomishCounty|2020-03-02':3.399000000000002E-5,'EPI_ISL_413650|hCoV-19/USA/WA15-UW11/2020|USA|Washington||2020-03-05':0.0):3.400000000000001E-5,(('EPI_ISL_415611|hCoV-19/USA/WA-UW46/2020|USA|Washington||2020-03-09':0.0,'EPI_ISL_417370|hCoV-19/USA/WA-UW221/2020|USA|Washington||2020-03-14':3.400000000000001E-5):3.401000000000001E-5,('EPI_ISL_418782|hCoV-19/USA/WA-NH13/2020|USA|Washington||2020-03-13':3.399000000000002E-5,('EPI_ISL_418906|hCoV-19/USA/WA-UW339/2020|USA|Washington||2020-03-16':3.400000000000001E-5,('EPI_ISL_416665|hCoV-19/USA/WA-UW127/2020|USA|Washington||2020-03-12':6.801000000000002E-5,('EPI_ISL_413928|hCoV-19/USA/CA-CDPH-UC9/2020|USA|California|GrandPrincesscruiseship|2020-03-05':1.3601999999999993E-4,('EPI_ISL_421548|hCoV-19/USA/WY-WYPHL011/2020|USA|Wyoming||2020-03-14':6.800999999999997E-5,('EPI_ISL_422974|hCoV-19/USA/WA-UW-1279/2020|USA|Washington||2020-03-17':1.0203000000000002E-4,('EPI_ISL_412970|hCoV-19/USA/WA2/2020|USA|Washington|SnohomishCounty|2020-02-24':3.399000000000002E-5,('EPI_ISL_413458|hCoV-19/USA/WA7-UW4/2020|USA|Washington||2020-03-01':3.399000000000002E-5,('EPI_ISL_413563|hCoV-19/USA/WA12-UW8/2020|USA|Washington||2020-03-03':3.400000000000001E-5,('EPI_ISL_414363|hCoV-19/USA/WA-UW15/2020|USA|Washington||2020-03-04':3.399000000000002E-5,('EPI_ISL_414595|hCoV-19/USA/WA-UW26/2020|USA|Washington|Kirkland|2020-03-05':3.400000000000001E-5,(('EPI_ISL_415608|hCoV-19/USA/WA-UW43/2020|USA|Washington||2020-03-08':0.0,'EPI_ISL_416651|hCoV-19/USA/WA-UW113/2020|USA|||2020-03-11':3.399000000000002E-5):6.799999999999997E-5,(('EPI_ISL_416443|hCoV-19/USA/WA-UW87/2020|USA|Washington||2020-03-10':0.0,('EPI_ISL_422971|hCoV-19/USA/WA-UW-1320/2020|USA|Washington||2020-03-17':3.399000000000002E-5,'EPI_ISL_418922|hCoV-19/USA/WA-UW355/2020|USA|Washington||2020-03-16':6.803000000000001E-5):0.0):3.399000000000002E-5,('EPI_ISL_416727|hCoV-19/USA/WA-UW189/2020|USA|Washington||2020-03-13':3.399000000000002E-5,('EPI_ISL_417103|hCoV-19/USA/WA-S50/2020|USA|Washington|KingCounty|2020-03-05':3.400000000000001E-5,('EPI_ISL_417120|hCoV-19/USA/WA-S67/2020|USA|Washington|KingCounty|2020-03-04':3.401000000000001E-5,('EPI_ISL_417129|hCoV-19/USA/WA-S76/2020|USA|Washington|KingCounty|2020-03-05':6.800000000000003E-5,('EPI_ISL_417142|hCoV-19/USA/WA-S89/2020|USA|Washington|UmatillaCounty|2020-02-29':6.801000000000002E-5,('EPI_ISL_417148|hCoV-19/USA/WA-S95/2020|USA|Washington|KingCounty|2020-02-28':6.799000000000003E-5,('EPI_ISL_417157|hCoV-19/USA/WA-S104/2020|USA|Washington|SnohomishCounty|2020-03-05':3.399000000000002E-5,(('EPI_ISL_418334|hCoV-19/Canada/ON_PHL4069/2020|Canada|Ontario||2020-03-07':3.399000000000002E-5,'EPI_ISL_417203|hCoV-19/USA/WI-09/2020|USA|Wisconsin||2020-03-21':0.0):3.399000000000002E-5,('EPI_ISL_418075|hCoV-19/USA/WA-UW290/2020|USA|Washington||2020-03-15':6.801000000000002E-5,('EPI_ISL_418917|hCoV-19/USA/IL-UW350/2020|USA|Illinois||2020-03-14':3.399000000000002E-5,('EPI_ISL_418956|hCoV-19/USA/VA-DCLS-0002/2020|USA|Virginia||2020-03-17':3.400000000000001E-5,('EPI_ISL_419779|hCoV-19/Australia/VIC57/2020|Australia|Victoria||2020-03-12':3.400000000000001E-5,('EPI_ISL_415626|hCoV-19/USA/WA-UW61/2020|USA|Washington||2020-03-10':3.399000000000002E-5,('EPI_ISL_413455|hCoV-19/USA/WA4-UW2/2020|USA|Washington||2020-02-28':0.0,('EPI_ISL_418818|hCoV-19/Canada/BC_1318414/2020|Canada|BritishColumbia||2020-03-06':0.0,('EPI_ISL_419526|hCoV-19/USA/CT-Yale-037/2020|USA|Connecticut||2020-03-16':0.0,('EPI_ISL_417480|hCoV-19/USA/MN44-MDH44/2020|USA|Minnesota||2020-03-12':6.803000000000001E-5,'EPI_ISL_416667|hCoV-19/USA/WA-UW129/2020|USA|Washington||2020-03-12':3.399000000000002E-5):6.802000000000002E-5):0.0):9.999999999994822E-9):9.999999999994822E-9):0.0):9.999999999994822E-9):0.0):9.999999999994822E-9):0.0):0.0):0.0):0.0):9.999999999994822E-9):9.999999999994822E-9):9.999999999994822E-9):9.999999999994822E-9):0.0):0.0):9.999999999994822E-9):9.999999999994822E-9):9.999999999994822E-9):0.0):9.999999999994822E-9):9.999999999994822E-9):0.0):0.0):9.999999999994822E-9):9.999999999994822E-9):9.999999999994822E-9):0.0):0.0):9.999999999994822E-9):9.999999999994822E-9):9.999999999994822E-9):9.999999999994822E-9):3.399000000000002E-5):3.399000000000002E-5):1.7000000000000013E-5,((('EPI_ISL_407193|hCoV-19/SouthKorea/KCDC03/2020|SouthKorea|Gyeonggi-do||2020-01-25':0.0,('EPI_ISL_426180|hCoV-19/Korea/KCDC2010/2020|SouthKorea|||2020-02-05':3.399000000000002E-5,'EPI_ISL_426171|hCoV-19/Korea/KCDC2008/2020|SouthKorea|||2020-02-05':3.3980000000000024E-5):0.0):6.800000000000003E-5,('EPI_ISL_406801|hCoV-19/Wuhan/WH04/2020|China|Hubei|Wuhan|2020-01-05':0.0,('EPI_ISL_413697|hCoV-19/China/WF0012/2020|China|||2020-02':6.799999999999997E-5,('EPI_ISL_414938|hCoV-19/Shandong/LY005/2020|China|Shandong||2020-01-24':3.399000000000002E-5,(('EPI_ISL_419230|hCoV-19/Spain/Andalucia201617/2020|Spain|Andalusia||2020-03-05':0.0,('EPI_ISL_424667|hCoV-19/Mexico/EdoMex-InDRE_03/2020|Mexico|EstadodeMexico||2020-03-04':0.0,'EPI_ISL_426476|hCoV-19/Uruguay/UY-1/2020|Uruguay|Montevideo||2020-03-16':3.4579999999999984E-5):3.400000000000001E-5):3.399000000000002E-5,('EPI_ISL_419713|hCoV-19/USA/VA-DCLS-0021/2020|USA|Virginia||2020-03-11':1.0203000000000002E-4,(('EPI_ISL_419696|hCoV-19/USA/NY-NYUMC35/2020|USA|NewYork|Manhattan|2020-03-18':3.399000000000002E-5,'EPI_ISL_416696|hCoV-19/USA/CT-UW158/2020|USA|Connecticut||2020-03-13':0.0):6.805E-5,('EPI_ISL_410535|hCoV-19/Singapore/4/2020|Singapore|||2020-02-03':0.0,('EPI_ISL_415461|hCoV-19/Netherlands/Gelderland_1/2020|Netherlands|Gelderland||2020-03-10':0.0,('EPI_ISL_421308|hCoV-19/USA/WI-50/2020|USA|Wisconsin||2020-03-25':3.401000000000001E-5,('EPI_ISL_417201|hCoV-19/USA/WI-07/2020|USA|Wisconsin||2020-03-21':3.400000000000001E-5,'EPI_ISL_417514|hCoV-19/USA/WI-22/2020|USA|Wisconsin||2020-03-13':0.0):9.999999999994822E-9):1.0202000000000003E-4):3.400000000000001E-5):9.999999999994822E-9):9.999999999994822E-9):3.399000000000002E-5):9.999999999994822E-9):0.0):9.999999999994822E-9):0.0):0.0,(('EPI_ISL_408666|hCoV-19/Japan/TY-WK-501/2020|Japan|Tokyo||2020-01-31':3.400000000000001E-5,'EPI_ISL_403932|hCoV-19/Guangdong/20SF012/2020|China|Guandong|Shenzhen|2020-01-14':0.0):3.400000000000001E-5,(('EPI_ISL_419728|hCoV-19/Australia/VIC126/2020|Australia|Victoria||2020-03-20':6.802000000000002E-5,('EPI_ISL_420114|hCoV-19/Spain/Valencia29/2020|Spain|ComunitatValenciana|Valencia|2020-03-09':3.400000000000001E-5,'EPI_ISL_415151|hCoV-19/USA/NY2-PV08100/2020|USA|NewYork||2020-03-04':0.0):0.0):1.7016999999999998E-4,(('EPI_ISL_408668|hCoV-19/Vietnam/VR03-38142/2020|Vietnam|ThanhHoa||2020-01-24':0.0,('EPI_ISL_426182|hCoV-19/Korea/KCDC2012/2020|SouthKorea|||2020-02-09':6.801000000000008E-5,(('EPI_ISL_421426|hCoV-19/USA/NY-PV08490/2020|USA|NewYork||2020-03-17':1.0212000000000003E-4,'EPI_ISL_420786|hCoV-19/USA/GA_1320/2020|USA|Georgia||2020-03-03':0.0):0.0,('EPI_ISL_418869|hCoV-19/USA/WA-UW301/2020|USA|Washington||2020-03-16':1.0203999999999996E-4,('EPI_ISL_416538|hCoV-19/NewZealand/20VR0275/2020|NewZealand|Wellington||2020-03-15':0.0,'EPI_ISL_419777|hCoV-19/Australia/VIC56/2020|Australia|Victoria||2020-03-12':3.399000000000002E-5):3.401000000000001E-5):3.397999999999997E-5):6.798999999999998E-5):3.402000000000006E-5):1.0209999999999999E-4,(('EPI_ISL_418995|hCoV-19/Singapore/12Clin/2020|Singapore|||2020-02-28':0.0,'EPI_ISL_414378|hCoV-19/Singapore/12/2020|Singapore|||2020-02-17':3.444E-5):3.444E-5,('EPI_ISL_414380|hCoV-19/Singapore/14/2020|Singapore|||2020-02-13':0.0,('EPI_ISL_414379|hCoV-19/Singapore/13/2020|Singapore|||2020-02-18':6.891999999999998E-5,('NC_045512.2|Wuhan-Hu-1|China|||2019-12-01':0.0,('EPI_ISL_413580|hCoV-19/Netherlands/Oisterwijk_1364072/2020|Netherlands|Oisterwijk||2020-03-02':0.0,('EPI_ISL_419554|hCoV-19/USA/CA_2602/2020|USA|California||2020-02-26':3.400000000000001E-5,('EPI_ISL_418267|hCoV-19/Vietnam/19-02S/2020|Vietnam|HoChiMinhCity||2020-01-22':3.399000000000002E-5,('EPI_ISL_417286|hCoV-19/England/20109093706/2020|UnitedKingdom|England||2020-03-05':3.400000000000001E-5,('EPI_ISL_416353|hCoV-19/Shanghai/SH0044/2020|China|Shanghai||2020-02-04':3.3980000000000024E-5,('EPI_ISL_413692|hCoV-19/China/WF0002/2020|China|||2020-01':6.799999999999997E-5,('EPI_ISL_411955|hCoV-19/USA/CA8/2020|USA|California||2020-02-10':3.399000000000002E-5,('EPI_ISL_408486|hCoV-19/Jiangxi/IVDC-JX-002/2020|China|Jiangxi|Pingxiang|2020-01-11':3.399000000000002E-5,('EPI_ISL_406535|hCoV-19/Foshan/20SF210/2020|China|Guangdong|Foshan|2020-01-22':3.399000000000002E-5,('EPI_ISL_403936|hCoV-19/Guangdong/20SF028/2020|China|Guangdong|Zhuhai|2020-01-17':3.400000000000001E-5,('EPI_ISL_407987|hCoV-19/Singapore/2/2020|Singapore|||2020-01-25':3.402E-5,(((('EPI_ISL_421235|hCoV-19/Hangzhou/HZCDC0013/2020|China|Hangzhou||2020-01-20':3.399000000000002E-5,(('EPI_ISL_416565|hCoV-19/Japan/DP0005/2020|Japan|unknown||2020-02-15':3.400000000000001E-5,'EPI_ISL_412969|hCoV-19/Japan/Hu_DP_Kng_19-027/2020|Japan|||2020-02-10':0.0):3.399000000000002E-5,('EPI_ISL_407988|hCoV-19/Singapore/3/2020|Singapore|||2020-02-01':0.0,('EPI_ISL_416571|hCoV-19/Japan/DP0077/2020|Japan|unknown||2020-02-15':3.399000000000002E-5,('EPI_ISL_416607|hCoV-19/Japan/DP0543/2020|Japan|unknown||2020-02-17':3.401000000000001E-5,('EPI_ISL_408430|hCoV-19/France/IDF0515/2020|France|Ile-de-France|Paris|2020-01-29':6.802000000000002E-5,('EPI_ISL_416706|hCoV-19/USA/WA-UW168/2020|USA|Washington||2020-03-13':0.0,'EPI_ISL_416432|hCoV-19/SaudiArabia/KAIMRC-Alghoribi/2020|SaudiArabia|Riyadh||2020-03-07':3.401000000000001E-5):1.3606000000000002E-4):9.999999999994822E-9):0.0):9.999999999994822E-9):0.0):0.0):9.999999999994822E-9,('EPI_ISL_415741|hCoV-19/Taiwan/CGMH-CGU-03/2020|Taiwan|Taoyuan||2020-02-26':1.0203000000000002E-4,('EPI_ISL_417406|hCoV-19/Australia/NSW53/2020|Australia|NewSouthWales|Sydney|2020-03-11':1.7006999999999998E-4,('EPI_ISL_416331|hCoV-19/Shanghai/SH0022/2020|China|Shanghai||2020-01-30':6.799999999999997E-5,('EPI_ISL_417523|hCoV-19/Taiwan/CGMH-CGU-10/2020|Taiwan|Taoyuan||2020-03-13':2.0422000000000002E-4,('EPI_ISL_417383|hCoV-19/Australia/NSW15/2020|Australia|NewSouthWales|Sydney|2020-03-03':1.0202000000000003E-4,('EPI_ISL_412975|hCoV-19/Australia/NSW05/2020|Australia|NewSouthWales|Sydney|2020-02-28':6.797999999999998E-5,(('EPI_ISL_419965|hCoV-19/Australia/VIC272/2020|Australia|Victoria||2020-03-22':3.401000000000001E-5,'EPI_ISL_419780|hCoV-19/Australia/VIC66/2020|Australia|Victoria||2020-03-13':0.0):3.400000000000001E-5,('EPI_ISL_418325|hCoV-19/Canada/ON_PHL5472/2020|Canada|Ontario||2020-02-20':3.400000000000001E-5,('EPI_ISL_418322|hCoV-19/Canada/ON_PHL3917/2020|Canada|Ontario||2020-03-08':3.3980000000000024E-5,('EPI_ISL_414591|hCoV-19/USA/WA-UW22/2020|USA|Washington|Kirkland|2020-03-06':0.0,('EPI_ISL_418827|hCoV-19/Canada/BC_4143842/2020|Canada|BritishColumbia||2020-03-04':9.999999999994822E-9,('EPI_ISL_413595|hCoV-19/Australia/NSW09/2020|Australia|NSW|Sydney|2020-02-28':1.0203999999999996E-4,('EPI_ISL_413213|hCoV-19/Australia/NSW06/2020|Australia|NewSouthWales|Sydney|2020-02-29':3.399999999999996E-5,'EPI_ISL_418381|hCoV-19/Canada/ON_PHL2223/2020|Canada|Ontario||2020':3.423E-5):1.0000000000049032E-8):6.799999999999997E-5):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):9.999999999994822E-9):6.799999999999997E-5):3.400000000000001E-5,(('EPI_ISL_406596|hCoV-19/France/IDF0372/2020|France|Ile-de-France|Paris|2020-01-23':3.400000000000001E-5,('EPI_ISL_408977|hCoV-19/Australia/NSW03/2020|Australia|NewSouthWales|Sydney|2020-01-25':0.0,'EPI_ISL_410536|hCoV-19/Singapore/5/2020|Singapore|||2020-02-06':3.399000000000002E-5):0.0):9.999999999994822E-9,(('EPI_ISL_412029|hCoV-19/HongKong/VB20024950/2020|HongKong|||2020-01-30':9.999999999994822E-9,('EPI_ISL_419247|hCoV-19/HongKong/HKPU83-1702/2020|HongKong|||2020-02-24':1.0203999999999996E-4,('EPI_ISL_414517|hCoV-19/HongKong/VM20002907/2020|HongKong|||2020-02-25':6.802000000000002E-5,('EPI_ISL_417193|hCoV-19/HongKong/HKPU32_0402/2020|HongKong|||2020-02-09':3.399000000000002E-5,'EPI_ISL_417187|hCoV-19/HongKong/HKPU29_0102/2020|HongKong|||2020-02-08':0.0):0.0):1.0000000000049032E-8):1.0202000000000003E-4):3.400000000000001E-5,('EPI_ISL_417488|hCoV-19/Norway/1493/2020|Norway|Oslo||2020-02-29':3.401000000000001E-5,('EPI_ISL_410546|hCoV-19/Italy/INMI1-cs/2020|Italy|Rome||2020-01-31':0.0,((('EPI_ISL_420799|hCoV-19/Korea/BA-ACH_2604/2020|Korea|||2020-02-27':3.4009999999999954E-5,'EPI_ISL_413025|hCoV-19/USA/WA3-UW1/2020|USA|Washington||2020-02-27':6.801000000000002E-5):3.400000000000001E-5,('EPI_ISL_421358|hCoV-19/USA/NY-PV08136/2020|USA|NewYork|Manhattan|2020-03-17':6.798000000000004E-5,('EPI_ISL_420182|hCoV-19/England/SHEF-C029D/2020|England|SouthYorkshire||2020-03-27':1.0294999999999998E-4,('EPI_ISL_420255|hCoV-19/England/SHEF-C0163/2020|England|SouthYorkshire||2020-03-25':0.0,('EPI_ISL_419996|hCoV-19/Australia/VIC305/2020|Australia|Victoria||2020-03-23':3.399999999999996E-5,'EPI_ISL_419918|hCoV-19/Australia/VIC223/2020|Australia|Victoria||2020-03-20':6.802000000000002E-5):1.3605999999999997E-4):9.999999999994822E-9):0.0):0.0):0.0,(('EPI_ISL_417268|hCoV-19/England/20109050706/2020|UnitedKingdom|England||2020-03-05':9.999999999994822E-9,('EPI_ISL_414006|hCoV-19/England/200990724/2020|UnitedKingdom|England||2020-02-28':3.399999999999996E-5,(('EPI_ISL_417475|hCoV-19/USA/MN39-MDH39/2020|USA|Minnesota||2020-03-12':3.401000000000001E-5,'EPI_ISL_426027|hCoV-19/USA/NY-Wadsworth-10683-01/2020|USA|NewYork||2020-03-04':0.0):6.802000000000002E-5,('EPI_ISL_420222|hCoV-19/England/SHEF-C02F7/2020|England|SouthYorkshire||2020-03-29':6.802000000000002E-5,('EPI_ISL_421805|hCoV-19/England/201380044/2020|UnitedKingdom|England||2020-03-26':1.7007999999999997E-4,('EPI_ISL_418020|hCoV-19/Portugal/PT0035/2020|Portugal|||2020-03-16':3.399000000000002E-5,('EPI_ISL_419797|hCoV-19/Australia/VIC87/2020|Australia|Victoria||2020-03-15':3.399999999999996E-5,(('EPI_ISL_418286|hCoV-19/England/SHEF-BFD63/2020|England|SouthYorkshire||2020-03-18':6.864999999999996E-5,'EPI_ISL_415478|hCoV-19/Netherlands/NA_21/2020|Netherlands|||2020-03-08':0.0):0.0,('EPI_ISL_425766|hCoV-19/Scotland/CVR37/2020|Scotland|||2020-03-13':6.800000000000003E-5,('EPI_ISL_420232|hCoV-19/England/SHEF-C0682/2020|England|SouthYorkshire||2020-03-25':0.0,'EPI_ISL_420271|hCoV-19/England/SHEF-C0075/2020|England|SouthYorkshire||2020-03-23':0.0):6.800999999999997E-5):1.0000000000049032E-8):0.0):1.0000000000049032E-8):0.0):0.0):1.0000000000049032E-8):0.0):3.3989999999999964E-5):3.399000000000002E-5,(('EPI_ISL_416032|hCoV-19/Brazil/SPBR-10/2020|Brazil|DistritoFederal|Brasilia|2020-03-04':1.0000000000049032E-8,'EPI_ISL_420371|hCoV-19/Belgium/VRJM-0323114/2020|Belgium|Hemisem||2020-03-23':3.399999999999996E-5):3.399999999999996E-5,(('EPI_ISL_417478|hCoV-19/USA/MN42-MDH42/2020|USA|Minnesota||2020-03-13':0.0,('EPI_ISL_417017|hCoV-19/Belgium/ULG-6638/2020|Belgium|Liege||2020-03-14':3.399999999999996E-5,('EPI_ISL_420693|hCoV-19/England/20139047404/2020|UnitedKingdom|England||2020-03-28':3.399000000000002E-5,('EPI_ISL_425537|hCoV-19/England/NOTT-10E3BD/2020|England|||2020-03-21':3.399000000000002E-5,'EPI_ISL_416646|hCoV-19/USA/WA-UW108/2020|USA|Washington||2020-03-11':0.0):0.0):0.0):1.0000000000049032E-8):6.799000000000003E-5,('EPI_ISL_417540|hCoV-19/Iceland/115/2020|Iceland|Reykjavik||2020-03-17':1.0201000000000003E-4,('EPI_ISL_424551|hCoV-19/Iceland/530/2020|Iceland|Reykjavik||2020-03-25':1.0201999999999998E-4,(('EPI_ISL_422603|hCoV-19/Netherlands/NA_294/2020|Netherlands|||2020-04-01':3.399999999999996E-5,'EPI_ISL_415512|hCoV-19/Netherlands/NoordBrabant_56/2020|Netherlands|NoordBrabant||2020-03-09':3.399000000000002E-5):3.400000000000001E-5,(('EPI_ISL_417544|hCoV-19/Iceland/119/2020|Iceland|Reykjavik||2020-03-17':3.399999999999996E-5,'EPI_ISL_417548|hCoV-19/Iceland/170/2020|Iceland|Reykjavik||2020-03-17':0.0):3.3989999999999964E-5,('EPI_ISL_420306|hCoV-19/USA/AK-PHL015/2020|USA|Alaska|Ketchikan|2020-03-16':1.0200999999999998E-4,('EPI_ISL_415527|hCoV-19/Netherlands/Utrecht_18/2020|Netherlands|Utrecht||2020-03-12':6.800000000000003E-5,('EPI_ISL_421614|hCoV-19/USA/NY-PV09063/2020|USA|NewYork|Manhattan|2020-03-20':6.800000000000003E-5,('EPI_ISL_422587|hCoV-19/Netherlands/NA_276/2020|Netherlands|||2020-03-31':6.800000000000003E-5,('EPI_ISL_417580|hCoV-19/Iceland/252/2020|Iceland|Reykjavik||2020-03-17':3.3989999999999964E-5,('EPI_ISL_425308|hCoV-19/England/CAMB-74580/2020|England|||2020-03-28':3.3989999999999964E-5,(('EPI_ISL_425727|hCoV-19/Scotland/CVR195/2020|Scotland|||2020-03-18':1.0000000000049032E-8,'EPI_ISL_425732|hCoV-19/Scotland/CVR201/2020|Scotland|||2020-03-18':3.402000000000006E-5):3.3989999999999964E-5,('EPI_ISL_425754|hCoV-19/Scotland/CVR264/2020|Scotland|||2020-03-20':3.3989999999999964E-5,('EPI_ISL_414529|hCoV-19/Netherlands/NoordBrabant_20/2020|Netherlands|NoordBrabant||2020-03-04':9.999999999994822E-9,'EPI_ISL_415491|hCoV-19/Netherlands/NA_34/2020|Netherlands|||2020-03-07':0.0):9.999999999994822E-9):0.0):0.0):0.0):9.999999999994822E-9):0.0):0.0):9.999999999994822E-9):0.0):0.0):9.999999999994822E-9):0.0):9.999999999994822E-9):9.999999999994822E-9):3.400000000000001E-5):9.999999999994822E-9):3.400000000000001E-5):0.0):3.400000000000001E-5):0.0):3.399000000000002E-5):9.999999999994822E-9,((('EPI_ISL_413014|hCoV-19/Canada/ON-PHL2445/2020|Canada|Ontario||2020-01-25':0.0,'EPI_ISL_408008|hCoV-19/USA/CA3/2020|USA|California||2020-01-29':3.400000000000001E-5):6.800999999999997E-5,('EPI_ISL_423395|hCoV-19/England/20140064704/2020|UnitedKingdom|England||2020-03-28':1.3606000000000002E-4,('EPI_ISL_419732|hCoV-19/Australia/VIC129/2020|Australia|Victoria||2020-03-21':3.400000000000001E-5,(('EPI_ISL_418026|hCoV-19/Portugal/PT0041/2020|Portugal|||2020-03-17':3.400000000000001E-5,('EPI_ISL_413577|hCoV-19/Netherlands/Naarden_1364774/2020|Netherlands|Naarden||2020-03-02':0.0,('EPI_ISL_415517|hCoV-19/Netherlands/NoordBrabant_61/2020|Netherlands|NoordBrabant||2020':3.400000000000001E-5,'EPI_ISL_413573|hCoV-19/Netherlands/Hardinxveld_Giessendam_1364806/2020|Netherlands|HardinxveldGiessendam||2020-03-02':0.0):3.3980000000000024E-5):0.0):9.999999999994822E-9,('EPI_ISL_422763|hCoV-19/Netherlands/NA_228/2020|Netherlands|||2020-03-27':0.0,('EPI_ISL_414536|hCoV-19/Netherlands/NoordBrabant_27/2020|Netherlands|NoordBrabant||2020-03-08':3.400000000000001E-5,('EPI_ISL_422716|hCoV-19/Netherlands/NA_181/2020|Netherlands|||2020-03-22':3.400000000000001E-5,('EPI_ISL_415501|hCoV-19/Netherlands/NoordBrabant_44/2020|Netherlands|NoordBrabant||2020-03-11':0.0,('EPI_ISL_415506|hCoV-19/Netherlands/NoordBrabant_49/2020|Netherlands|NoordBrabant||2020-03-11':0.0,('EPI_ISL_413568|hCoV-19/Netherlands/Dalen_1363624/2020|Netherlands|Dalen||2020-03-01':0.0,'EPI_ISL_413567|hCoV-19/Netherlands/Coevorden_1363618/2020|Netherlands|Coevorden||2020':0.0):9.999999999994822E-9):0.0):9.999999999994822E-9):0.0):9.999999999994822E-9):3.400000000000001E-5):3.400000000000001E-5):9.999999999994822E-9):0.0):9.999999999994822E-9,('EPI_ISL_406533|hCoV-19/Guangzhou/20SF206/2020|China|Guangdong|Guangzhou|2020-01-22':6.800999999999997E-5,(('EPI_ISL_420338|hCoV-19/Belgium/AC-030982/2020|Belgium|Saive||2020-03-09':3.399000000000002E-5,('EPI_ISL_418679|hCoV-19/England/20122119202/2020|UnitedKingdom|England||2020-03-17':3.400000000000001E-5,('EPI_ISL_417793|hCoV-19/Iceland/142/2020|Iceland|Reykjavik||2020-03-13':3.400000000000001E-5,(('EPI_ISL_415920|hCoV-19/Wales/PHW32/2020|UnitedKingdom|Wales||2020-03-12':3.400000000000001E-5,'EPI_ISL_418159|hCoV-19/Wales/PHWC-24288/2020|UnitedKingdom|Wales||2020-03-16':0.0):3.399000000000002E-5,('EPI_ISL_414505|hCoV-19/Germany/NRW-06/2020|Germany|NorthRhineWestphalia|HeinsbergDistrict|2020-02-27':0.0,(('EPI_ISL_417412|hCoV-19/Australia/NSW62/2020|Australia|NewSouthWales|Sydney|2020-03-17':0.0,'EPI_ISL_417759|hCoV-19/Iceland/166/2020|Iceland|Reykjavik||2020-03-13':3.403999999999999E-5):3.400000000000001E-5,('EPI_ISL_424439|hCoV-19/Iceland/415/2020|Iceland|Reykjavik||2020-03-19':3.400000000000001E-5,('EPI_ISL_424643|hCoV-19/Belgium/ULG-10089/2020|Belgium|Liege||2020-04-04':3.401000000000001E-5,'EPI_ISL_424874|hCoV-19/USA/NE_6605/2020|USA|Nebraska||2020-03-05':3.400000000000001E-5):0.0):0.0):0.0):9.999999999994822E-9):0.0):0.0):3.400000000000001E-5):3.400000000000001E-5,(('EPI_ISL_406862|hCoV-19/Germany/BavPat1/2020|Germany|Bavaria|Munich|2020-01-28':0.0,'EPI_ISL_417471|hCoV-19/USA/MN34-MDH34/2020|USA|Minnesota||2020-03-12':0.0):9.999999999994822E-9,(('EPI_ISL_420336|hCoV-19/Belgium/PA-030680/2020|Belgium|Soumagne||2020-03-06':1.0000000000049032E-8,'EPI_ISL_420360|hCoV-19/Belgium/VL-0318104/2020|Belgium|Doornik||2020-03-18':6.800000000000003E-5):6.805E-5,(('EPI_ISL_422592|hCoV-19/Netherlands/NA_283/2020|Netherlands|||2020-03-31':6.801000000000002E-5,('EPI_ISL_415460|hCoV-19/Netherlands/Flevoland_1/2020|Netherlands|Flevoland||2020-03-09':0.0,(('EPI_ISL_422506|hCoV-19/USA/NY-PV09134/2020|USA|NewYork|Manhattan|2020-03-19':3.399999999999996E-5,(('EPI_ISL_417879|hCoV-19/Slovakia/SK-BMC5/2020|Slovakia|Kosice||2020-03-06':3.399999999999996E-5,('EPI_ISL_414626|hCoV-19/France/HF1684/2020|France|HautsdeFrance|CrepyenValois|2020-02-29':0.0,(('EPI_ISL_414638|hCoV-19/France/HF1995/2020|France|HautsdeFrance|Compiegne|2020-03-04':3.399999999999996E-5,('EPI_ISL_417878|hCoV-19/Slovakia/SK-BMC2/2020|Slovakia|Bratislava||2020-03-07':3.399999999999996E-5,'EPI_ISL_426422|hCoV-19/USA/IN_72003/2020|USA|Indiana||2020-03-07':3.399999999999996E-5):0.0):0.0,('EPI_ISL_424454|hCoV-19/Iceland/430/2020|Iceland|Reykjavik||2020-03-20':6.802000000000002E-5,('EPI_ISL_418668|hCoV-19/England/20110136302/2020|UnitedKingdom|England||2020-03-09':1.0000000000049032E-8,('EPI_ISL_418701|hCoV-19/England/20124020402/2020|UnitedKingdom|England||2020-03-17':0.0,'EPI_ISL_421779|hCoV-19/England/201360300/2020|UnitedKingdom|England||2020-03-25':3.399999999999996E-5):3.401000000000001E-5):3.399999999999996E-5):0.0):0.0):0.0):3.399000000000002E-5,(('EPI_ISL_415473|hCoV-19/Netherlands/NA_17/2020|Netherlands|||2020-03-09':3.401000000000001E-5,'EPI_ISL_421463|hCoV-19/Portugal/PT0060/2020|Portugal|||2020-03-20':1.0000000000049032E-8):6.802999999999996E-5,(('EPI_ISL_417336|hCoV-19/France/Lyon_0668/2020|France|ARA||2020-03-06':0.0,('EPI_ISL_419171|hCoV-19/France/ARA11949/2020|France|ARA|Lyon|2020-03-21':3.399000000000002E-5,'EPI_ISL_418430|hCoV-19/France/ARA10910/2020|France|ARA|Lyon|2020-03-18':3.399999999999996E-5):1.0000000000049032E-8):0.0,(('EPI_ISL_416521|hCoV-19/SaudiArabia/SCDC-3321/2020|SaudiArabia|||2020-03-10':0.0,'EPI_ISL_418392|hCoV-19/Finland/13M58/2020|Finland|||2020-03-13':3.399999999999996E-5):3.401000000000001E-5,('EPI_ISL_416674|hCoV-19/USA/WA-UW136/2020|USA|||2020-03-11':0.0,('EPI_ISL_419299|hCoV-19/Japan/P3-1/2020|Japan|Ishikawa||2020-03-09':3.399999999999996E-5,('EPI_ISL_426462|hCoV-19/USA/VA-DCLS-0054/2020|USA|Virginia||2020-03-29':3.399999999999996E-5,('EPI_ISL_417018|hCoV-19/Belgium/ULG-6670/2020|Belgium|Liege||2020-03-14':1.0000000000049032E-8,'EPI_ISL_421183|hCoV-19/Belgium/ULG-10003/2020|Belgium|Liege||2020-03-30':6.804E-5):1.0205000000000001E-4):0.0):0.0):0.0):3.399000000000002E-5):0.0):0.0):3.401000000000001E-5):1.0000000000049032E-8,('EPI_ISL_423021|hCoV-19/USA/WA-UW-1569/2020|USA|Washington||2020-03-19':1.0203999999999996E-4,(('EPI_ISL_414627|hCoV-19/France/HF1795/2020|France|HautsdeFrance|Compiegne|2020-03-02':0.0,('EPI_ISL_417469|hCoV-19/USA/MN31-MDH31/2020|USA|Minnesota||2020-03-12':0.0,('EPI_ISL_417593|hCoV-19/Iceland/265/2020|Iceland|Reykjavik||2020-03-17':0.0,('EPI_ISL_426466|hCoV-19/USA/VA-DCLS-0058/2020|USA|Virginia||2020-03-31':6.805000000000005E-5,('EPI_ISL_419702|hCoV-19/USA/NY-NYUMC41/2020|USA|NewYork|Brooklyn|2020-03-18':6.800999999999997E-5,('EPI_ISL_418352|hCoV-19/Canada/ON_PHL5672/2020|Canada|Ontario||2020-03-11':1.1480000000000019E-5,'EPI_ISL_418097|hCoV-19/Wales/PHWC-23BD9/2020|UnitedKingdom|Wales||2020-03-12':0.0):2.252000000000005E-5):1.0000000000049032E-8):1.0000000000049032E-8):0.0):0.0):0.0,('EPI_ISL_415481|hCoV-19/Netherlands/NA_24/2020|Netherlands|||2020-03-08':3.401000000000001E-5,(('EPI_ISL_415543|hCoV-19/USA/UPHL-05/2020|USA|Utah||2020-03-13':0.0,'EPI_ISL_424263|hCoV-19/USA/WA-UW-1799/2020|USA|Washington||2020-03-22':3.399999999999996E-5):3.399999999999996E-5,(('EPI_ISL_415597|hCoV-19/USA/WA-UW69/2020|USA|Washington|Seattle|2020-03-10':0.0,('EPI_ISL_417454|hCoV-19/USA/WA-UW240/2020|USA|Washington||2020-03-14':3.399999999999996E-5,('EPI_ISL_418054|hCoV-19/USA/WA-UW269/2020|USA|Washington||2020-03-16':3.399999999999996E-5,('EPI_ISL_422977|hCoV-19/USA/WA-UW-1309/2020|USA|Washington||2020-03-17':3.399999999999996E-5,'EPI_ISL_418904|hCoV-19/USA/WA-UW337/2020|USA|Washington||2020-03-16':3.399999999999996E-5):0.0):0.0):1.0000000000049032E-8):3.399999999999996E-5,(('EPI_ISL_416642|hCoV-19/USA/WA-UW104/2020|USA|Washington||2020-03-11':0.0,'EPI_ISL_421302|hCoV-19/USA/WI-44/2020|USA|Wisconsin||2020-03-17':3.399999999999996E-5):3.399999999999996E-5,(('EPI_ISL_416661|hCoV-19/USA/WA-UW123/2020|USA|Washington||2020-03-12':3.399999999999996E-5,('EPI_ISL_417376|hCoV-19/USA/WA-UW227/2020|USA|Washington||2020-03-15':3.399999999999996E-5,('EPI_ISL_418838|hCoV-19/Canada/BC_6404889/2020|Canada|BritishColumbia||2020-03-12':0.0,'EPI_ISL_418049|hCoV-19/USA/MN-UW264/2020|USA|Minnesota||2020-03-13':3.399999999999996E-5):0.0):0.0):3.401000000000001E-5,('EPI_ISL_417020|hCoV-19/Belgium/ULG-6939/2020|Belgium|Liege||2020-03-15':6.800000000000003E-5,(('EPI_ISL_417474|hCoV-19/USA/MN38-MDH38/2020|USA|Minnesota||2020-03-12':0.0,('EPI_ISL_421578|hCoV-19/USA/NY-NYUMC77/2020|USA|NewYork|Brooklyn|2020-03-18':0.0,'EPI_ISL_420296|hCoV-19/USA/NY-NYUMC45/2020|USA|NewYork|NassauCounty|2020-03-18':3.401000000000001E-5):3.399999999999996E-5):3.399999999999996E-5,((('EPI_ISL_422531|hCoV-19/USA/NY-PV09169/2020|USA|NewYork|Manhattan|2020-03-19':0.0,'EPI_ISL_417476|hCoV-19/USA/MN40-MDH40/2020|USA|Minnesota||2020-03-12':1.0000000000049032E-8):1.0000000000049032E-8,('EPI_ISL_418358|hCoV-19/Canada/ON_PHL5756/2020|Canada|Ontario||2020-03-12':3.401000000000001E-5,('EPI_ISL_420297|hCoV-19/USA/NY-NYUMC46/2020|USA|NewYork|Brooklyn|2020-03-18':3.401999999999995E-5,('EPI_ISL_418976|hCoV-19/USA/NY-NYUMC30/2020|USA|NewYork|Manhattan|2020-03-17':0.0,'EPI_ISL_421388|hCoV-19/USA/NY-PV08432/2020|USA|NewYork|Brooklyn|2020-03-18':6.802999999999996E-5):1.0000000000049032E-8):0.0):6.802000000000002E-5):3.399999999999996E-5,(('EPI_ISL_421349|hCoV-19/USA/NY-PV08120/2020|USA|NewYork||2020-03-17':3.401000000000001E-5,('EPI_ISL_417531|hCoV-19/Luxembourg/LNS2013896/2020|Luxembourg|||2020-03-18':3.402000000000006E-5,('EPI_ISL_423796|hCoV-19/England/20132068204/2020|UnitedKingdom|England||2020-03-23':3.399999999999996E-5,'EPI_ISL_417629|hCoV-19/Iceland/300/2020|Iceland|Reykjavik||2020-03-18':0.0):3.399999999999996E-5):3.399999999999996E-5):1.0000000000049032E-8,('EPI_ISL_417665|hCoV-19/Iceland/336/2020|Iceland|Reykjavik||2020-03-14':6.798999999999998E-5,('EPI_ISL_417682|hCoV-19/Iceland/101/2020|Iceland|Reykjavik||2020-03-10':1.0203999999999996E-4,('EPI_ISL_417830|hCoV-19/Iceland/212/2020|Iceland|Reykjavik||2020-03-16':6.802000000000002E-5,(('EPI_ISL_422655|hCoV-19/Netherlands/NA_106/2020|Netherlands|||2020-03-18':1.0203000000000002E-4,'EPI_ISL_418076|hCoV-19/USA/WA-UW291/2020|USA|Washington||2020-03-15':0.0):3.399999999999996E-5,('EPI_ISL_418197|hCoV-19/USA/NY-NYUMC12/2020|USA|NewYork|Manhattan|2020-03-15':3.399999999999996E-5,('EPI_ISL_418198|hCoV-19/USA/NY-NYUMC13/2020|USA|NewYork|Manhattan|2020-03-17':3.399999999999996E-5,(('EPI_ISL_418203|hCoV-19/USA/NY-NYUMC18/2020|USA|NewYork|Manhattan|2020-03-17':0.0,('EPI_ISL_420588|hCoV-19/USA/NY-NYUMC72/2020|USA|NewYork|Manhattan|2020-03-18':0.0,('EPI_ISL_422519|hCoV-19/USA/NY-PV09151/2020|USA|NewYork|Brooklyn|2020-03-22':3.399999999999996E-5,'EPI_ISL_424930|hCoV-19/USA/NY-NYUMC123/2020|USA|NewYork|Nassau|2020-04-01':6.802000000000002E-5):0.0):3.401000000000001E-5):3.399999999999996E-5,('EPI_ISL_418236|hCoV-19/France/HF2586/2020|France|HautsdeFrance|Compiegne|2020-03-16':3.401000000000001E-5,('EPI_ISL_418895|hCoV-19/USA/CT-UW328/2020|USA|Connecticut||2020-03-14':6.800999999999997E-5,('EPI_ISL_419651|hCoV-19/USA/WI-GMF-00466/2020|USA|Wisconsin|LaCrosseCounty|2020-03-29':6.802000000000002E-5,('EPI_ISL_419852|hCoV-19/Australia/VIC155/2020|Australia|Victoria||2020-03-17':3.399000000000002E-5,('EPI_ISL_419880|hCoV-19/Australia/VIC184/2020|Australia|Victoria||2020-03-19':3.399999999999996E-5,('EPI_ISL_419906|hCoV-19/Australia/VIC211/2020|Australia|Victoria||2020-03-20':3.399999999999996E-5,('EPI_ISL_420020|hCoV-19/USA/VA-DCLS-0036/2020|USA|Virginia||2020-03-20':3.397999999999997E-5,('EPI_ISL_420150|hCoV-19/Norway/2084/2020|Norway|||2020-03-09':6.802000000000002E-5,('EPI_ISL_421299|hCoV-19/USA/WI-41/2020|USA|Wisconsin||2020-03-25':3.399999999999996E-5,('EPI_ISL_421346|hCoV-19/USA/WY-WYPHL004/2020|USA|Wyoming||2020-03-14':3.401000000000001E-5,('EPI_ISL_421394|hCoV-19/USA/NY-PV08443/2020|USA|NewYork|Manhattan|2020-03-17':3.399999999999996E-5,('EPI_ISL_424237|hCoV-19/USA/WA-UW-1739/2020|USA|Washington||2020-03-21':3.399999999999996E-5,('EPI_ISL_425906|hCoV-19/Scotland/EDB124/2020|Scotland|||2020-03-18':6.802000000000002E-5,('EPI_ISL_426470|hCoV-19/USA/VA-DCLS-0063/2020|USA|Virginia||2020-03-31':3.399999999999996E-5,'EPI_ISL_426026|hCoV-19/USA/NY-Wadsworth-10528-01/2020|USA|NewYork||2020-03-03':3.399999999999996E-5):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):1.0000000000049032E-8):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):1.0000000000049032E-8):3.4009999999999954E-5):3.401000000000001E-5):9.999999999994822E-9,((('EPI_ISL_413593|hCoV-19/Luxembourg/Lux1/2020|Luxembourg|||2020-02-29':0.0,('EPI_ISL_420024|hCoV-19/USA/VA-DCLS-0043/2020|USA|Virginia||2020-03-27':1.0203000000000002E-4,'EPI_ISL_415640|hCoV-19/Scotland/EDB003/2020|UnitedKingdom|Scotland||2020-03-08':0.0):3.4029999999999944E-5):3.400000000000001E-5,('EPI_ISL_413648|hCoV-19/Portugal/CV63/2020|Portugal|||2020-03-01':3.400000000000001E-5,(('EPI_ISL_417957|hCoV-19/Spain/Madrid_H7_36/2020|Spain|Madrid||2020-03-12':3.405999999999998E-5,('EPI_ISL_417639|hCoV-19/Iceland/310/2020|Iceland|Reykjavik||2020-03-18':3.3989999999999964E-5,(('EPI_ISL_417766|hCoV-19/Iceland/208/2020|Iceland|Reykjavik||2020-03-16':0.0,('EPI_ISL_417777|hCoV-19/Iceland/102/2020|Iceland|Reykjavik||2020-03-10':3.399999999999996E-5,'EPI_ISL_419949|hCoV-19/Australia/VIC254/2020|Australia|Victoria||2020-03-21':3.399999999999996E-5):1.0000000000049032E-8):3.400000000000001E-5,('EPI_ISL_414019|hCoV-19/Switzerland/GE3121/2020|Switzerland|Geneva||2020-02-27':0.0,('EPI_ISL_416426|hCoV-19/Hungary/mbl1/2020|Hungary|Budapest||2020-03-17':3.400000000000001E-5,(('EPI_ISL_417536|hCoV-19/Iceland/10/2020|Iceland|Reykjavik||2020-03-16':0.0,('EPI_ISL_417712|hCoV-19/Iceland/172/2020|Iceland|Reykjavik||2020-03-15':3.399000000000002E-5,'EPI_ISL_417680|hCoV-19/Iceland/177/2020|Iceland|Reykjavik||2020-03-15':6.800000000000003E-5):1.0000000000049032E-8):3.399999999999996E-5,('EPI_ISL_417609|hCoV-19/Iceland/281/2020|Iceland|Reykjavik||2020-03-17':3.399000000000002E-5,('EPI_ISL_421470|hCoV-19/Portugal/PT0067/2020|Portugal|||2020-03-21':3.399000000000002E-5,'EPI_ISL_422756|hCoV-19/Netherlands/NA_221/2020|Netherlands|||2020-03-27':1.0203999999999996E-4):0.0):0.0):9.999999999994822E-9):0.0):0.0):0.0):0.0):3.400000000000001E-5,(('EPI_ISL_418673|hCoV-19/England/20122032802/2020|UnitedKingdom|England||2020-03-16':0.0,('EPI_ISL_414523|hCoV-19/England/200990660/2020|UnitedKingdom|England||2020-02-27':0.0,('EPI_ISL_416731|hCoV-19/England/SHEF-BFCC0/2020|England|Northamtonshire||2020-03-03':6.801000000000002E-5,'EPI_ISL_420456|hCoV-19/Australia/WA11/202|Australia|WesternAustralia|Perth|2020-02-22':3.400000000000001E-5):0.0):2.3479999999999985E-5):1.0499999999999984E-5,(('EPI_ISL_415462|hCoV-19/Netherlands/Gelderland_2/2020|Netherlands|Gelderland||2020-03-09':0.0,('EPI_ISL_415535|hCoV-19/Netherlands/ZuidHolland_31/2020|Netherlands|ZuidHolland||2020-03-12':6.799999999999997E-5,('EPI_ISL_422605|hCoV-19/Netherlands/NA_296/2020|Netherlands|||2020-04-01':3.3989999999999964E-5,('EPI_ISL_422669|hCoV-19/Netherlands/NA_122/2020|Netherlands|||2020-03-18':3.400000000000001E-5,('EPI_ISL_422866|hCoV-19/Netherlands/NoordBrabant_70/2020|Netherlands|NoordBrabant||2020-03-11':6.800000000000003E-5,'EPI_ISL_422714|hCoV-19/Netherlands/NA_179/2020|Netherlands|||2020-03-23':3.399000000000002E-5):9.999999999994822E-9):0.0):0.0):0.0):3.400000000000001E-5,('EPI_ISL_415601|hCoV-19/USA/WA-UW73/2020|USA|Washington||2020-03-10':3.400000000000001E-5,(('EPI_ISL_422700|hCoV-19/Netherlands/NA_165/2020|Netherlands|||2020-03-21':3.399999999999996E-5,'EPI_ISL_416482|hCoV-19/Georgia/Tb/2020|Georgia|Tbilisi||2020-03-13':0.0):3.399000000000002E-5,('EPI_ISL_417430|hCoV-19/Belgium/RT-03035/2020|Belgium|Vorst||2020-03-03':3.400000000000001E-5,('EPI_ISL_417470|hCoV-19/USA/MN32-MDH32/2020|USA|Minnesota||2020-03-12':3.400000000000001E-5,('EPI_ISL_417533|hCoV-19/Luxembourg/LNS6282845/2020|Luxembourg|||2020-03-18':3.399000000000002E-5,('EPI_ISL_417565|hCoV-19/Iceland/237/2020|Iceland|Reykjavik||2020-03-17':6.800999999999997E-5,(('EPI_ISL_417727|hCoV-19/Iceland/127/2020|Iceland|Reykjavik||2020-03-12':0.0,('EPI_ISL_418965|hCoV-19/USA/UT-00023/2020|USA|Utah||2020-03-11':0.0,'EPI_ISL_425494|hCoV-19/England/NOTT-10E0B6/2020|England|||2020-03-18':6.800999999999997E-5):3.400000000000001E-5):3.400000000000001E-5,('EPI_ISL_418210|hCoV-19/Senegal/073/2020|Senegal|Touba||2020-03-10':3.400000000000001E-5,('EPI_ISL_418671|hCoV-19/England/20119026102/2020|UnitedKingdom|England||2020-03-13':3.400000000000001E-5,('EPI_ISL_418856|hCoV-19/Canada/BC_9345042/2020|Canada|BritishColumbia||2020-03-13':3.400000000000001E-5,('EPI_ISL_419980|hCoV-19/Australia/VIC289/2020|Australia|Victoria||2020-03-22':6.801000000000002E-5,('EPI_ISL_420303|hCoV-19/USA/AK-PHL002/2020|USA|Alaska|Fairbanks|2020-03-15':3.400000000000001E-5,('EPI_ISL_420544|hCoV-19/India/2020763/2020|India|||2020':3.400000000000001E-5,(('EPI_ISL_421285|hCoV-19/USA/WI-27/2020|USA|Wisconsin||2020-03-25':0.0,'EPI_ISL_421290|hCoV-19/USA/WI-32/2020|USA|Wisconsin||2020-03-24':3.399000000000002E-5):1.0202000000000003E-4,('EPI_ISL_422707|hCoV-19/Netherlands/NA_172/2020|Netherlands|||2020-03-22':3.400000000000001E-5,('EPI_ISL_425487|hCoV-19/England/NOTT-10E04D/2020|England|||2020-03-17':6.801000000000002E-5,('EPI_ISL_425720|hCoV-19/Scotland/CVR18/2020|Scotland|||2020-03-12':3.400000000000001E-5,('EPI_ISL_425650|hCoV-19/Scotland/CVR103/2020|Scotland|||2020-03-13':0.0,'EPI_ISL_425653|hCoV-19/Scotland/CVR107/2020|Scotland|||2020-03-13':3.399999999999996E-5):6.801000000000002E-5):0.0):0.0):0.0):0.0):0.0):0.0):9.999999999994822E-9):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):9.999999999994822E-9):9.999999999994822E-9):0.0):0.0):0.0,('EPI_ISL_414437|hCoV-19/Netherlands/Utrecht_3/2020|Netherlands|Utrecht||2020-03-03':0.0,('EPI_ISL_412973|hCoV-19/Italy/CDG1/2020|Italy|Lombardy||2020-02-20':0.0,((('EPI_ISL_417473|hCoV-19/USA/MN36-MDH36/2020|USA|Minnesota||2020-03-13':0.0,('EPI_ISL_420212|hCoV-19/England/SHEF-C03D6/2020|England|SouthYorkshire||2020-03-28':3.426000000000004E-5,'EPI_ISL_421294|hCoV-19/USA/WI-36/2020|USA|Wisconsin||2020-03-25':1.0079999999999985E-5):2.3899999999999985E-5):9.999999999994822E-9,('EPI_ISL_417479|hCoV-19/USA/MN43-MDH43/2020|USA|Minnesota||2020-03-12':0.0,('EPI_ISL_417481|hCoV-19/Iceland/LUH-01/2020|Iceland|Reykjavik||2020-03-13':0.0,'EPI_ISL_415472|hCoV-19/Netherlands/NA_16/2020|Netherlands|||2020-03-11':0.0):3.400000000000001E-5):0.0):0.0,('EPI_ISL_417472|hCoV-19/USA/MN35-MDH35/2020|USA|Minnesota||2020-03-12':0.0,(((('EPI_ISL_418624|hCoV-19/Belgium/ULG-6972/2020|Belgium|Liege||2020-03-15':0.0,'EPI_ISL_424364|hCoV-19/India/3118/2020|India|||2020-03-17':3.399000000000002E-5):3.400000000000001E-5,('EPI_ISL_425811|hCoV-19/Scotland/CVR83/2020|Scotland|||2020-03-09':3.430999999999996E-5,'EPI_ISL_414027|hCoV-19/Scotland/CVR05/2020|UnitedKingdom|Scotland||2020-03-04':0.0):9.999999999994822E-9):3.400000000000001E-5,('EPI_ISL_414445|hCoV-19/Netherlands/ZuidHolland_9/2020|Netherlands|ZuidHolland||2020-03-03':1.7010000000000001E-4,(('EPI_ISL_425893|hCoV-19/Scotland/EDB103/2020|Scotland|||2020-03-22':0.0,'EPI_ISL_418418|hCoV-19/France/ARA10163/2020|France|ARA|Lyon|2020-03-16':6.801999999999996E-5):3.400000000000001E-5,('EPI_ISL_415708|hCoV-19/Switzerland/GE4984/2020|Switzerland|||2020-03-07':6.800999999999997E-5,(('EPI_ISL_419912|hCoV-19/Australia/VIC217/2020|Australia|Victoria||2020-03-20':6.801000000000002E-5,('EPI_ISL_425923|hCoV-19/Scotland/EDB161/2020|Scotland|||2020-03-24':6.852999999999997E-5,'EPI_ISL_422664|hCoV-19/Netherlands/NA_117/2020|Netherlands|||2020-03-16':6.801000000000002E-5):0.0):9.999999999994822E-9,('EPI_ISL_418436|hCoV-19/Switzerland/42177472/2020|Switzerland|Basel||2020-03-05':0.0,(('EPI_ISL_420598|hCoV-19/Argentina/C3013/2020|Argentina|||2020-03-22':6.800000000000003E-5,'EPI_ISL_419830|hCoV-19/Australia/VIC137/2020|Australia|Victoria||2020-03-22':6.802000000000002E-5):0.0,('EPI_ISL_420380|hCoV-19/Belgium/DPG-0325123/2020|Belgium|Jemappes||2020-03-25':3.4009999999999954E-5,('EPI_ISL_420409|hCoV-19/Belgium/ZF-0325152/2020|Belgium|Blandain||2020-03-25':3.399999999999996E-5,('EPI_ISL_415651|hCoV-19/France/BFC2094/2020|France|Bourgogne-France-Comte|Montreux-Chateau|2020-03-05':3.3989999999999964E-5,('EPI_ISL_416499|hCoV-19/France/IDF2278/2020|France|IledeFrance|Longjumeau|2020-03-11':3.400000000000001E-5,(('EPI_ISL_419568|hCoV-19/Luxembourg/LNS0756270/2020|Luxembourg|||2020-03-14':3.4009999999999954E-5,('EPI_ISL_418645|hCoV-19/Belgium/ULG-9558/2020|Belgium|Liege||2020-03-21':1.0201999999999998E-4,'EPI_ISL_416749|hCoV-19/France/Valence_532/2020|France|ARA||2020-03-04':0.0):3.3989999999999964E-5):0.0,('EPI_ISL_416756|hCoV-19/France/Lyon_06531/2020|France|ARA||2020-03-06':3.400000000000001E-5,('EPI_ISL_417337|hCoV-19/France/Lyon_06625/2020|France|ARA||2020-03-07':3.3989999999999964E-5,('EPI_ISL_417737|hCoV-19/Iceland/155/2020|Iceland|Reykjavik||2020-03-15':3.4009999999999954E-5,('EPI_ISL_418630|hCoV-19/Belgium/ULG-7729/2020|Belgium|Liege||2020-03-17':3.400000000000001E-5,('EPI_ISL_415704|hCoV-19/Switzerland/BE2536/2020|Switzerland|||2020-03-04':0.0,('EPI_ISL_418282|hCoV-19/Switzerland/42176229/2020|Switzerland|Basel||2020-03-04':0.0,'EPI_ISL_418283|hCoV-19/Switzerland/42176560/2020|Switzerland|Basel||2020-03-04':0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):9.999999999994822E-9):9.999999999994822E-9):9.999999999994822E-9):9.999999999994822E-9):3.400000000000001E-5):0.0):0.0):9.999999999994822E-9):9.999999999994822E-9):0.0,('EPI_ISL_424383|hCoV-19/Iceland/359/2020|Iceland|Reykjavik||2020-03-19':1.3606999999999996E-4,('EPI_ISL_417509|hCoV-19/USA/WI-16/2020|USA|Wisconsin||2020-03-14':3.401000000000001E-5,('EPI_ISL_418681|hCoV-19/England/20122119502/2020|UnitedKingdom|England||2020-03-17':3.401000000000001E-5,('EPI_ISL_421483|hCoV-19/Portugal/PT0080/2020|Portugal|||2020-03-18':3.401000000000001E-5,('EPI_ISL_414023|hCoV-19/Switzerland/VD5615/2020|Switzerland|Vaud||2020-03-01':3.399999999999996E-5,('EPI_ISL_418373|hCoV-19/Canada/ON_PHL7590/2020|Canada|Ontario||2020-03-14':1.0205999999999995E-4,('EPI_ISL_419387|hCoV-19/Portugal/IGC00010/2020|Portugal|Lisbon||2020-03-18':3.401000000000001E-5,('EPI_ISL_421797|hCoV-19/England/201380030/2020|UnitedKingdom|England||2020-03-26':3.399999999999996E-5,('EPI_ISL_425326|hCoV-19/England/CAMB-74702/2020|England|||2020-03-29':3.399999999999996E-5,(('EPI_ISL_420393|hCoV-19/Belgium/VWJM-0324136/2020|Belgium|Bierbeek||2020-03-24':3.401000000000001E-5,('EPI_ISL_425888|hCoV-19/Scotland/EDB098/2020|Scotland|||2020-03-20':1.0205999999999995E-4,(('EPI_ISL_420215|hCoV-19/England/SHEF-C046A/2020|England|SouthYorkshire||2020-03-27':6.804E-5,('EPI_ISL_416140|hCoV-19/Denmark/SSI-05/2020|Denmark|Copenhagen||2020-03-02':0.0,'EPI_ISL_417581|hCoV-19/Iceland/253/2020|Iceland|Reykjavik||2020-03-17':3.401000000000001E-5):0.0):6.802999999999996E-5,('EPI_ISL_421824|hCoV-19/England/201380228/2020|UnitedKingdom|England||2020-03-25':3.399999999999996E-5,('EPI_ISL_420166|hCoV-19/England/SHEF-C0813/2020|England|SouthYorkshire||2020-03-25':3.401000000000001E-5,'EPI_ISL_417585|hCoV-19/Iceland/257/2020|Iceland|Reykjavik||2020-03-17':1.0000000000049032E-8):3.399999999999996E-5):1.0000000000049032E-8):4.199999999999994E-6):2.9779999999999976E-5):3.399999999999996E-5,('EPI_ISL_412912|hCoV-19/Germany/Baden-Wuerttemberg-1/2020|Germany|Baden-Wuerttemberg||2020-02-25':3.401000000000001E-5,(('EPI_ISL_413022|hCoV-19/Switzerland/1000477796/2020|Switzerland|Zurich||2020-02-29':0.0,(('EPI_ISL_417525|hCoV-19/Taiwan/CGMH-CGU-12/2020|Taiwan|Taoyuan||2020-03-14':3.401000000000001E-5,(('EPI_ISL_417551|hCoV-19/Iceland/187/2020|Iceland|Reykjavik||2020-03-16':0.0,'EPI_ISL_424535|hCoV-19/Iceland/513/2020|Iceland|Reykjavik||2020-03-21':1.0203000000000002E-4):3.399000000000002E-5,('EPI_ISL_418279|hCoV-19/Switzerland/42175213/2020|Switzerland|Basel||2020-03-03':3.424999999999999E-5,'EPI_ISL_413997|hCoV-19/Switzerland/GE3895/2020|Switzerland|Geneva||2020-02-26':0.0):1.0000000000049032E-8):3.399999999999996E-5):1.0000000000049032E-8,('EPI_ISL_425253|hCoV-19/England/CAMB-738E2/2020|England|||2020-03-29':0.0,('EPI_ISL_414460|hCoV-19/Netherlands/Overijssel_2/2020|Netherlands|Overijssel||2020-03-03':0.0,('EPI_ISL_420350|hCoV-19/Belgium/BDW-030694/2020|Belgium|Geluwe||2020-03-06':3.401000000000001E-5,(('EPI_ISL_416468|hCoV-19/Belgium/GMH-03022/2020|Belgium|Holsbeek||2020-03-02':0.0,'EPI_ISL_415158|hCoV-19/Belgium/QKJ-03015/2020|Belgium|Brussels||2020-03-01':6.805000000000005E-5):3.401000000000001E-5,('EPI_ISL_416475|hCoV-19/Belgium/DBA-03032/2020|Belgium|Leuven||2020-03-03':3.399999999999996E-5,(('EPI_ISL_414429|hCoV-19/Netherlands/NoordBrabant_3/2020|Netherlands|NoordBrabant||2020-03-02':0.0,('EPI_ISL_415467|hCoV-19/Netherlands/NA_11/2020|Netherlands|||2020-03-10':3.401000000000001E-5,'EPI_ISL_417644|hCoV-19/Iceland/315/2020|Iceland|Reykjavik||2020-03-18':1.0207E-4):1.0000000000049032E-8):3.399999999999996E-5,(('EPI_ISL_417566|hCoV-19/Iceland/238/2020|Iceland|Reykjavik||2020-03-17':0.0,('EPI_ISL_424443|hCoV-19/Iceland/419/2020|Iceland|Reykjavik||2020-03-19':3.399999999999996E-5,'EPI_ISL_417632|hCoV-19/Iceland/303/2020|Iceland|Reykjavik||2020-03-18':1.0000000000049032E-8):3.399999999999996E-5):6.802000000000002E-5,(('EPI_ISL_415471|hCoV-19/Netherlands/NA_15/2020|Netherlands|||2020-03-11':0.0,'EPI_ISL_422698|hCoV-19/Netherlands/NA_163/2020|Netherlands|||2020-03-21':3.401000000000001E-5):3.399999999999996E-5,('EPI_ISL_417571|hCoV-19/Iceland/243/2020|Iceland|Reykjavik||2020-03-17':6.802000000000002E-5,('EPI_ISL_414545|hCoV-19/Netherlands/NoordBrabant_36/2020|Netherlands|NoordBrabant||2020-03-03':3.399999999999996E-5,('EPI_ISL_414554|hCoV-19/Netherlands/Utrecht_15/2020|Netherlands|Utrecht||2020-03-08':3.399000000000002E-5,('EPI_ISL_417728|hCoV-19/Iceland/70/2020|Iceland|Reykjavik||2020-03-08':3.399999999999996E-5,('EPI_ISL_413584|hCoV-19/Netherlands/Rotterdam_1364740/2020|Netherlands|Rotterdam||2020-03-03':0.0,(('EPI_ISL_414507|hCoV-19/Germany/NRW-011/2020|Germany|NorthRhineWestphalia|Duesseldorf|2020-03-03':0.0,'EPI_ISL_417815|hCoV-19/Iceland/186/2020|Iceland|Reykjavik||2020-03-16':3.399000000000002E-5):0.0,('EPI_ISL_414424|hCoV-19/Netherlands/Limburg_2/2020|Netherlands|Limburg||2020-03-03':0.0,('EPI_ISL_417343|hCoV-19/USA/WA-UW194/2020|USA|Washington||2020-03-13':1.0209E-4,'EPI_ISL_414449|hCoV-19/Netherlands/NoordBrabant_2/2020|Netherlands|NoordBrabant||2020-03-03':0.0):0.0):1.0000000000049032E-8):0.0):1.0000000000049032E-8):1.0000000000049032E-8):1.0000000000049032E-8):0.0):0.0):0.0):0.0):1.0000000000049032E-8):0.0):0.0):3.399999999999996E-5):0.0):1.0000000000049032E-8):0.0):1.0000000000049032E-8,('EPI_ISL_415457|hCoV-19/Switzerland/AG7120/2020|Switzerland|||2020-02-29':3.399000000000002E-5,(('EPI_ISL_417021|hCoV-19/Belgium/ULG-6942/2020|Belgium|Liege||2020-03-15':6.800999999999997E-5,('EPI_ISL_415458|hCoV-19/Switzerland/GE8102/2020|Switzerland|||2020-03-01':0.0,'EPI_ISL_426473|hCoV-19/USA/VA-DCLS-0066/2020|USA|Virginia||2020-04-03':6.802000000000002E-5):0.0):3.399999999999996E-5,('EPI_ISL_415698|hCoV-19/Switzerland/GR2988/2020|Switzerland|||2020-02-27':3.399999999999996E-5,('EPI_ISL_417244|hCoV-19/England/20106005403/2020|UnitedKingdom|England||2020-03-03':3.399999999999996E-5,('EPI_ISL_417425|hCoV-19/Belgium/VBK-03061/2020|Belgium|Schoten||2020-03-06':3.399999999999996E-5,('EPI_ISL_417458|hCoV-19/Germany/NRW-13/2020|Germany|Duesseldorf||2020-03-11':3.399999999999996E-5,(('EPI_ISL_420351|hCoV-19/Belgium/VMC-030695/2020|Belgium|Gent||2020-03-06':3.399999999999996E-5,'EPI_ISL_417564|hCoV-19/Iceland/236/2020|Iceland|Reykjavik||2020-03-17':1.0000000000049032E-8):3.399999999999996E-5,('EPI_ISL_417567|hCoV-19/Iceland/239/2020|Iceland|Reykjavik||2020-03-17':3.399999999999996E-5,(('EPI_ISL_417619|hCoV-19/Iceland/290/2020|Iceland|Reykjavik||2020-03-18':6.800999999999997E-5,(('EPI_ISL_417992|hCoV-19/Portugal/PT0007/2020|Portugal|||2020-03-07':0.0,('EPI_ISL_419730|hCoV-19/Australia/VIC128/2020|Australia|Victoria||2020-03-20':3.401000000000001E-5,'EPI_ISL_418369|hCoV-19/Canada/ON_PHL8539/2020|Canada|Ontario||2020-03-10':3.399999999999996E-5):0.0):3.399999999999996E-5,(('EPI_ISL_420236|hCoV-19/England/SHEF-C0664/2020|England|SouthYorkshire||2020-03-23':6.802000000000002E-5,'EPI_ISL_420315|hCoV-19/Belgium/RYR-030649/2020|Belgium|Yernee-fraineux||2020-03-06':6.802000000000002E-5):0.0,('EPI_ISL_425875|hCoV-19/Scotland/EDB083/2020|Scotland|||2020-03-21':3.399999999999996E-5,('EPI_ISL_419921|hCoV-19/Australia/VIC226/2020|Australia|Victoria||2020-03-20':1.0201999999999998E-4,'EPI_ISL_420591|hCoV-19/USA/NY-NYUMC75/2020|USA|NewYork|Manhattan|2020-03-18':1.0203000000000002E-4):0.0):0.0):0.0):0.0):1.0000000000049032E-8,('EPI_ISL_417796|hCoV-19/Iceland/146/2020|Iceland|Reykjavik||2020-03-13':3.399999999999996E-5,('EPI_ISL_417994|hCoV-19/Portugal/PT0009/2020|Portugal|||2020-03-08':3.399999999999996E-5,('EPI_ISL_418007|hCoV-19/Portugal/PT0022/2020|Portugal|||2020-03-13':3.399999999999996E-5,('EPI_ISL_418651|hCoV-19/Belgium/ULG-9634/2020|Belgium|Liege||2020-03-22':3.399999999999996E-5,('EPI_ISL_419306|hCoV-19/Japan/P4-6/2020|Japan|Saitama||2020-03-20':3.399000000000002E-5,('EPI_ISL_419828|hCoV-19/Australia/VIC135/2020|Australia|Victoria||2020-03-22':3.399000000000002E-5,('EPI_ISL_420171|hCoV-19/England/SHEF-C08B9/2020|England|SouthYorkshire||2020-03-24':3.399999999999996E-5,('EPI_ISL_420180|hCoV-19/England/SHEF-C02CA/2020|England|SouthYorkshire||2020-03-27':3.399999999999996E-5,('EPI_ISL_420411|hCoV-19/Belgium/BEG-0323154/2020|Belgium|Tubize||2020-03-23':3.399999999999996E-5,('EPI_ISL_421462|hCoV-19/Portugal/PT0059/2020|Portugal|||2020-03-20':3.399999999999996E-5,('EPI_ISL_421782|hCoV-19/England/201360506/2020|UnitedKingdom|England||2020-03-25':3.399999999999996E-5,('EPI_ISL_423132|hCoV-19/England/20134025904/2020|UnitedKingdom|England||2020-03-24':3.399999999999996E-5,('EPI_ISL_423353|hCoV-19/England/20139065204/2020|UnitedKingdom|England||2020-03-28':3.399999999999996E-5,'EPI_ISL_425791|hCoV-19/Scotland/CVR63/2020|Scotland|||2020-03-13':3.399999999999996E-5):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):1.0000000000049032E-8):0.0):0.0):0.0):0.0):0.0):0.0):0.0):0.0):1.0000000000049032E-8):0.0):0.0):0.0):0.0):0.0):1.0000000000049032E-8):1.0000000000049032E-8):0.0):1.0000000000049032E-8):1.0212000000000003E-4):0.0):9.999999999994822E-9):9.999999999994822E-9):0.0):0.0):0.0):9.999999999994822E-9):3.400000000000001E-5):6.799999999999997E-5):9.999999999994822E-9):9.999999999994822E-9):0.0):9.999999999994822E-9):0.0):9.999999999994822E-9):0.0):0.0):0.0):9.999999999994822E-9):9.999999999994822E-9):0.0):9.999999999994822E-9):9.999999999994822E-9):9.999999999994822E-9):6.796999999999999E-5):0.0):9.999999999994822E-9):0.0):9.999999999994822E-9):9.999999999994822E-9):9.999999999994822E-9):1.7E-5);\"\n\n       // tree.spacing_x(25).spacing_y(100);\n\n\n        function bubbleSize(node) {\n\n            return 1;\n        }\n\n\n        function nameStyler(node){\n            //console.log(node)\n            //label color\n            const identifier = node.name.split('|')[1];\n            const country = node.name.split('|')[2];\n            const date = node.name.split('|')[5]\n            //const fill = identifier == 'China' ? 'red' : 'blue';\n            //return node.name\n            //return \"...\"+identifier;\n            return \"...\"+country+'|'+date;\n            return \"\";\n        }\n\n\n        var tree_coloring_scheme = d3.scale.category20();\n\n        function nodeStyler(dom_element, node) {\n            var country = node.name.split('|')[2]\n\n            //console.log(dom_element)\n\n            var node_color = tree_coloring_scheme(country)\n\n            dom_element.selectAll(\"circle\").style(\"fill\", node_color);\n            dom_element.selectAll(\"path\").style(\"fill\", node_color);\n            dom_element.style(\"fill\", node_color);\n\n            var existing_circle = dom_element.selectAll(\"circle\");\n\n            /*if (existing_circle.size() == 1) {\n                existing_circle.remove();\n            }*/\n            existing_circle.style(\"stroke-width\", \"1px\").style(\"stroke\", node_color);\n        }\n\n\n        function edgeStyler(dom_element, edge_object) {\n            //console.log(edge_object)\n            //console.log(dom_element)\n            dom_element.style(\"stroke-width\",  1+\"pt\");\n\n            var country = edge_object.target.name.split('|')[2]\n            var branch_color = tree_coloring_scheme(country)\n            if (country) {\n            dom_element.style(\"stroke\", tree_coloring_scheme(country));\n                dom_element.style(\"stroke-width\",  0.8+\"pt\");\n\n        }//else{\n                //dom_element.style(\"stroke\",'black');\n            //}\n        }\n\n        /*function nodeStyler(dom_element, node_object) {\n            if (\"bootstrap\" in node_object && node_object.bootstrap) {\n                var label = dom_element.selectAll(\".bootstrap\");\n                if (label.empty()) {\n                    dom_element.append(\"text\").classed(\"bootstrap\", true).text(node_object.bootstrap).attr(\"dx\", \".3em\").attr(\"text-anchor\", \"start\").attr(\"alignment-baseline\", \"middle\");\n                } else {\n                    if (tree.radial()) { // do not show internal node labels in radial mode\n                        label.remove();\n                    }\n                }\n            }\n        }*/\n\n        //let treesvg = d3.select(document.getElementById(\"tree_display\").append(\"svg\"))\n\n\n        var tree = d3.layout.phylotree()\n            // create a tree layout object\n            //.svg(d3.select(\"#tree_display\"))\n            .svg(d3.select(document.getElementById('tree_display')).append(\"svg\"))\n            //.svg(treesvg)\n            .radial(false)\n            //.align_tips (true)\n        .options({\n                //'top-offset':50,\n         'left-offset':0,\n         'max-radius':800,\n        //'left-right-spacing': 'fit-to-size',\n        'left-right-spacing':'fit-step',\n        // fit to given size top-to-bottom\n        'top-bottom-spacing': 'fit-to-size',\n        // fit to given size left-to-right\n        'selectable': true,\n        // make nodes and branches not selectable\n        'collapsible': true,\n         'reroot':true,\n        'show-scale':true,\n        // turn off the menu on internal nodes\n        'transitions': true,\n          'brush':true,\n        'draw-size-bubbles':true,\n       'zoom':true,\n          'minimum-per-level-spacing':1,\n       'maximum-per-level-spacing':1,\n       'maximum-per-node-spacing':1,\n        'minimum-per-node-spacing':1\n\n\n        // turn off d3 animations\n    })\n        .node_span(bubbleSize)\n        .size([tree_height, tree_width])\n        .node_circle_size(0) // do not show \"circles\" at internal nodes\n        // render to this SVG element\n        .branch_name(nameStyler)\n        .style_edges(edgeStyler)\n        .style_nodes(nodeStyler)\n\n\n\n        var standard_label = tree.branch_name();\n        tree.branch_name (function (node) {\n            return standard_label(node)+\"\";\n        });\n\n\n        tree(d3.layout.newick_parser(example_tree));\n\n        //var tree_attributes = {};\n        //var attribute_to_color = d3.scale.category10();\n\n        /* the following loop just populates an object with key : value pairs like\n         leaf_name -> [a,b,c], where a,b,c are random numbers in {0,1,2,3,4}\n         */\n\n        /*var maximum_length = 30;\n\n        tree.traverse_and_compute (function (node) {\n            if (d3.layout.phylotree.is_leafnode (node)) {\n                tree_attributes[node.name] = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,].map (function () {return Math.floor(Math.random() * 5);});\n                //maximum_length = maximum_length < node.name.length ? node.name.length : maximum_length;\n            }\n        });*/\n\n\n        /*tree.style_nodes(function (element, node_data) {\n            if (node_data.name in tree_attributes) {   // see if the node has attributes\n                var node_label = element.select(\"text\");\n                var font_size  = parseFloat (node_label.style (\"font-size\"));\n\n\n\n                var annotation = element.selectAll (\"rect\").data (tree_attributes[node_data.name]);\n                annotation.enter().append (\"rect\");\n                annotation.attr (\"width\", font_size)\n                    .attr (\"height\", font_size)\n                    .attr (\"y\", -font_size/2).style (\"fill\", function(d, i) {\n                    return attribute_to_color (d);\n                });\n\n                var move_past_label = maximum_length * 0.75 * font_size;\n\n                var x_shift = tree.shift_tip (node_data)[0] + move_past_label;\n                annotation.attr (\"transform\", null).attr (\"x\", function (d, i) { return  x_shift + font_size * i;});\n\n            }\n        });*/\n\n\n\n        // parse the Newick into a d3 hierarchy object with additional fields\n        tree.layout();\n        // layout and render the tree\n\n        /*$(\"#layout\").on (\"click\", function (e) {\n            tree.radial ($(this).prop (\"checked\")).placenodes().update ();\n        });*/\n\n\n        $(\"#layout\").on(\"click\", function(e) {\n            tree.radial($(this).prop(\"checked\")).placenodes().update();\n        });\n\n\n        const legendTextSize = 10\n\n\n        d3.select(\"#cluster-legend\").selectAll(\".row\").remove();\n        var cluster_colors = d3.select(\"#cluster_legend\").selectAll(\".row\").data(tree_coloring_scheme.domain().sort().map(function(d) {\n            return [d];\n        }));\n        cluster_colors.enter().append(\"div\").classed(\"row\", true);\n        cluster_colors.exit().remove();\n        cluster_colors = cluster_colors.selectAll(\"span\").data(function(d) {\n            return d\n        });\n        cluster_colors.enter().append(\"span\").classed(\"cluster-text\", true);\n\n        cluster_colors.each(function(d) {\n            d3.select(this).style(\"color\", tree_coloring_scheme(d), \"important\").classed(\"cluster-text\", true).text(d);\n\n            //d3.select(this).attr(\"font-size\", 4, \"important\")\n        });\n\n        /*const uniqueCountry = ['China', 'USA']\n\n        var legendContainer = treesvg.append(\"g\")\n            .attr('transform', `translate(10, 40)`)\n            .selectAll('.tick')\n            .data(uniqueCountry)\n            .enter().append('g')\n            .attr('class', 'tick');\n\n        const groups = treesvg.append(\"g\")\n            .attr('transform', `translate(10, 40)`)\n            .selectAll('.tick')\n            .data(uniqueCountry);\n\n        //console.log('groups', groups)\n\n        const groupsEnter = groups\n            .enter().append('g')\n\n        groupsEnter\n            //.merge(groups)\n            .attr('transform', (d, i) =>\n                `translate(0, ${i * 20})`\n        );\n        groups.exit().remove();\n\n\n        groupsEnter.append('rect')\n            //.merge(groups.select('rect'))\n            .attr(\"width\", 30)\n            .attr(\"height\", 10)\n            .attr(\"fill\", (d, i) => tree_coloring_scheme[i]);\n\n        groupsEnter.append('text')\n            //.merge(groups.select('text'))\n            .text(d => d.country + \" (\" + Math.round(d.count / 100) + \")\")\n            .attr(\"fill\", \"#555\")\n            .attr('x', 35)\n            .attr('dy', 9)\n            .attr(\"font-size\", 10);*/\n\n\n    }\n\n\n\n\n     render(){\n\n         return <div id=\"phyloeny\">\n\n             <div id=\"cluster_legend\"></div>\n             <div id=\"tree_display\"></div>\n               </div>\n     }\n}\n\n\n/*<form>\n <label>Radial layout</label>\n <input type=\"checkbox\" id=\"layout\"/>\n </form>*/\n\nexport default Phylogeny;\n","/**\n * Created by Yuan on 3/25/20.\n */\n\nimport React, {Component} from 'react';\nimport { NavLink } from \"react-router-dom\";\n\nclass MyHeader extends Component {\n\n    /*componentDidMount() {\n        this.Init();\n    }\n\n    Init() {\n        const province = this.props.province;\n    }*/\n\n    render () {\n        const province = this.props.province;\n        return (\n            <header>\n                <div className=\"bg\"></div>\n                <h1>\n\n                    <small style={{color:'white'}}>新型冠状病毒</small>\n                    <br />\n                    肺炎疫情动态追踪/回顾 · { province ? province.name : 'Epidemic and Evolution' }\n                </h1>\n                <i>By amsyuan </i>\n            </header>\n            /*<nav>\n            <NavLink exact activeClassName=\"active\" to=\"/\">\n                Home\n            </NavLink>\n            <NavLink activeClassName=\"active\" to=\"/users\">\n            Users\n            </NavLink>\n            <NavLink activeClassName=\"active\" to=\"/contact\">\n                Contact\n            </NavLink>\n            </nav>*/\n        )\n    }\n}\n\n//<span style={{fontSize:20}}>新型冠状病毒</span>\n\n//<small>新型冠状病毒</small>\nexport default MyHeader;\n","/**\n * Created by Yuan on 3/25/20.\n */\n\n\nimport React, {Component} from 'react';\n\n\nclass MyFooter extends Component {\n\n    render () {\n        return (\n        <div className='footer'>\n            <a href=\"XXX\" target=\"view_window\">\n               Develop and Support\n            </a>\n            <a href=\"XXX\" target=\"view_window\">\n                Yuan Jin & Bioinformatics Lab\n            </a>\n            <a href=\"XXXX\" target=\"view_window\">\n                Beijing Institute of Biotechnology\n            </a>\n        </div>\n        )\n    }\n}\n\nexport default MyFooter;\n\n","/**\n * Created by Yuan on 3/26/20.\n */\n\nimport React, {Component} from 'react';\n\n\nimport $ from 'jquery'\n\n//import $ from '../../js/lib/jquery';\n\n//import echarts from 'echarts/lib/echarts';\n\n\nimport ReactEcharts from 'echarts-for-react';\nimport echarts from 'echarts';\n\nimport  'echarts/lib/chart/bar';\nimport  'echarts/lib/chart/map';\n\n\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\n\nimport 'echarts/map/js/china';\nimport 'echarts/map/js/world';\n\n\nfunction getObjectKeys(object)\n{\n    var keys = [];\n    for (var property in object)\n        keys.push(object[property]['name']);\n    //console.log(keys);\n    return keys;\n}\n\nfunction getObjectValues(object)\n{\n    var values = [];\n    for (var property in object)\n        values.push({'value':object[property]['value'],\n            'cured':object[property]['cured'],'dead':object[property]['dead'],'active':object[property]['active'],\n            'visualMap':false,'itemStyle':{'color':\"red\"}\n        });\n    //console.log(values);\n    return values;\n}\n\n\nfunction getCuredValues(object)\n{\n    var values = [];\n    for (var property in object)\n        values.push({'value':object[property]['cured'],\n            'visualMap':false,'itemStyle':{'color':\"blue\"},tooltip:false,\n        });\n    //console.log(values);\n    return values;\n}\n\nfunction getDeadValues(object)\n{\n    var values = [];\n    for (var property in object)\n        values.push({'value':object[property]['dead'],\n            'visualMap':false,'itemStyle':{'color':\"green\"},tooltip:false,\n        });\n    //console.log(values);\n    return values;\n}\n\n\n//data url\nconst uploadedDataURL = \"data/epidata.json\";\n\n\nclass ChinaMap extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            totalData:[],\n            cases_day_province:[],\n            current_province : '北京'\n        };\n    }\n\n    getData() {\n        fetch(uploadedDataURL)\n            .then(response => response.json())\n            .then(data => {\n                //console.log(data)\n                this.setState({totalData: data.china, cases_day_province: data.cases_day_province})\n                console.log(this.state)\n                //console.log(this.state)\n\n            })\n            .catch(e => console.log('错误:', e))\n    }\n\n    getOption() {\n\n        const totalData = this.state.totalData\n        const cases_day_province = this.state.cases_day_province\n        var current_province = this.state.current_province\n\n        const china_pieces = [\n            {\n                \"max\": 100000,\n                \"min\": 50000,\n                \"label\": \" > 50000\"\n            },\n            {\n                \"max\": 50000,\n                \"min\": 1000,\n                \"label\": \"1000 - 50000\"\n            },\n            {\n                \"max\": 5000,\n                \"min\": 1000,\n                \"label\": \"1000 - 5000\"\n            },\n            {\n                \"max\": 1000,\n                \"min\": 500,\n                \"label\": \"500 - 1000\"\n            },\n            {\n                \"max\": 500,\n                \"min\": 100,\n                \"label\": \"100 - 500\"\n            },\n            {\n                \"max\": 100,\n                \"min\": 0,\n                \"label\": \"< 100\"\n            }\n        ]\n\n        //\n        const option = {\n            animation: false,\n            title: {\n                text: 'Current hCoV-19 Infection Situation in China',\n                subtext: 'Update Time: 2020-04-22',\n                left: 'center'\n            },\n            tooltip: {\n                trigger: 'item',\n\n                formatter: function(params) {\n                    //console.log(params)\n                    let tip = ''\n                    if (params.data) {\n                        if ('cured' in params.data && 'dead' in params.data)\n                        {\n                            tip =\n                                params.name +\n                                '：<br>确诊：' +\n                                params.data['value'] +\n                                '例<br>治愈：' +\n                                params.data['cured'] +\n                                '例<br>死亡：' +\n                                params.data['dead'] +\n                                '例<br>现存：' +\n                                params.data['active'] +\n                                '例'\n                        }\n                        return tip\n                    }\n                }\n            },\n\n\n            color:['red', 'blue', 'green'],\n\n            legend: {\n                orient: 'horizontal',\n                left: 'right',\n                data: ['Confirmed', 'Cured', 'Dead'],\n                //selectedMode: 'single',\n            },\n            visualMap: {\n                show: true,\n                type: 'piecewise',\n                pieces: china_pieces,\n                left: 'center',\n                top: 'center',\n                calculable: true\n            },\n            toolbox: {\n                show: false,\n                orient: 'vertical',\n                left: 'right',\n                top: 'center',\n                feature: {\n                    dataView: {readOnly: false},\n                    restore: {},\n                    saveAsImage: {}\n                }\n            },\n            grid: {\n                left: '60%',\n                width: '40%'\n            },\n            geo: {\n                roam: true,\n                type: 'map',\n                map: 'china',\n                left: 'left',\n\n                label: {\n                    normal: {\n                        fontSize: '10',\n                        show: true\n                    },\n                    emphasis: {\n                        show: true\n                    }\n                },\n                /*itemStyle: {\n                 normal: {\n                 borderColor: '#aaa',\n                 areaColor: '#555'\n                 },\n                 }*/\n                regions: [{\n                    name: '南海诸岛',\n                    value: 0,\n                    fontSize: '0',\n                    itemStyle: {\n                        normal: {\n                            opacity: 100,\n                            label: {\n                                show: false,\n                            }\n                        },\n                    }\n                }],\n            },\n\n            yAxis: [{\n                type: 'value',\n                boundaryGap: true,\n                splitLine: {\n                    show: false\n                },\n                axisLine: {\n                    show: true\n                },\n                axisTick: {\n                    show: true\n                },\n                name: current_province\n            }],\n\n            xAxis: [{\n                type: 'category',\n                data: getObjectKeys(cases_day_province[current_province]),\n                axisTick: {\n                    alignWithLabel: false\n                }\n            }],\n\n            series: [\n                {\n                    z:0,\n                    name: 'Confirmed',\n                    type: 'map',\n                    showLegendSymbol: false,\n                    geoIndex: 0,\n\n                    label: {\n                     normal: {\n                     show: false\n                     },\n                     emphasis: {\n                     show: true\n                     }\n                     },\n\n                    data: totalData,\n                },\n                /*{\n                    z:0,\n                    name: 'Active',\n                    type: 'map',\n                    geoIndex: 0,\n                    showLegendSymbol: false,\n                    data: []\n                },\n                {\n                    z:0,\n                    name: 'Death',\n                    type: 'map',\n                    geoIndex: 0,\n                    showLegendSymbol: false,\n                    data: []\n                },*/\n                {\n                    name: 'Confirmed',\n                    z: 2,\n                    type: 'bar',\n                    label: {\n                        normal: {\n                            show: false\n\n                        },\n                        emphasis: {\n                            show: true,\n                            position: 'top',\n                        }\n                    },\n                    itemStyle: {\n                     emphasis: {\n                     color: \"rgb(0,153,78)\"\n                     }\n                     },\n                    yAxisIndex: 0,\n\n                    data: getObjectValues(cases_day_province[current_province])\n                },\n                {\n                    name: 'Cured',\n                    z: 2,\n                    type: 'bar',\n                    label: {\n                        normal: {\n                            show: false\n                        },\n                        emphasis: {\n                            show: true,\n                            position: 'top',\n                        }\n                    },\n                    itemStyle: {\n                        emphasis: {\n                            color: \"rgb(0,153,78)\"\n                        }\n                    },\n                    data: getCuredValues(cases_day_province[current_province])\n                },\n                {\n                    name: 'Dead',\n                    z: 2,\n                    type: 'bar',\n                    label: {\n                        normal: {\n                            show: false\n                        },\n                        emphasis: {\n                            show: true,\n                            position: 'top',\n                        }\n                    },\n                    itemStyle: {\n                        emphasis: {\n                            color: \"rgb(0,153,78)\"\n                        }\n                    },\n                    data: getDeadValues(cases_day_province[current_province])\n                },\n            ]\n        }\n        //console.log(this.state)\n        return option;\n    }\n\n    componentWillMount() {\n    }\n\n    componentDidMount(){\n        this.getData();\n        /*var myChart = echarts.init(document.getElementById('map'));\n        myChart.setOption(option);*/\n\n    };\n\n    onChartClick = (params)=>{\n        // Do what you want to do on click event. params depend on the  type of  chart\n        this.state.current_province = params.name\n        this.echartsReact.getEchartsInstance().setOption(this.getOption())\n        //console.log(params.name)\n        //console.log(this.echartsReact.props.option)\n    }\n\n    _onEvents = {\n        'click': this.onChartClick,\n        //'click': this.onChartClick.bind(this),\n        //'dataZoom': this.onDataZoom,\n    }\n\n    /*onChartReadyCallback=()=>{\n        setTimeout(()=>{\n            this.setState({\n                loadingChart: false\n            });\n        } ,2000);\n    }*/\n\n    render(){\n        return(\n            <ReactEcharts\n                ref={(e) => { this.echartsReact = e }}\n                className = 'mapbox'\n                option={this.getOption()}\n                notMerge={true}\n                onEvents= {this._onEvents}\n                />\n        )\n    }\n\n}\n\n//lazyUpdate={(this.getOption(),false)}\n// onChartReady={this.onChartReadyCallback}\n\nexport default ChinaMap;","/**\n * Created by Yuan on 4/3/20.\n */\n/**\n * Created by Yuan on 3/26/20.\n */\n\nimport React, {Component} from 'react';\n\n\nimport $ from 'jquery'\n\n//import $ from '../../js/lib/jquery';\n\n//import echarts from 'echarts/lib/echarts';\n\n\nimport ReactEcharts from 'echarts-for-react';\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\nimport echarts from 'echarts';\n\nimport  'echarts/lib/chart/bar';\nimport  'echarts/lib/chart/map';\n\n\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\n\nimport 'echarts/map/js/china';\nimport 'echarts/map/js/world';\n\n\nfunction getObjectKeys(object)\n{\n    var keys = [];\n    for (var property in object)\n        keys.push(object[property]['name']);\n    //console.log(keys);\n    return keys;\n}\n\nfunction getObjectValues(object)\n{\n    var values = [];\n    for (var property in object)\n        values.push({'value':object[property]['value'],\n            'cured':object[property]['cured'],'dead':object[property]['dead'],'active':object[property]['active'],\n            'visualMap':false,'itemStyle':{'color':\"red\"}\n        });\n    //console.log(values);\n    return values;\n}\n\n/*function getConfirmedValues(object)\n{\n    var values = [];\n    for (var property in object)\n        values.push({'value':object[property]['value'],\n            'visualMap':false,'itemStyle':{'color':\"red\"}\n        });\n    //console.log(values);\n    return values;\n}*/\n\nfunction getCuredValues(object)\n{\n    var values = [];\n    for (var property in object)\n        values.push({'value':object[property]['cured'],\n            'visualMap':false,'itemStyle':{'color':\"blue\"},tooltip:false,\n        });\n    //console.log(values);\n    return values;\n}\n\nfunction getDeadValues(object)\n{\n    var values = [];\n    for (var property in object)\n        values.push({'value':object[property]['dead'],\n            'visualMap':false,'itemStyle':{'color':\"green\"},tooltip:false,\n        });\n    //console.log(values);\n    return values;\n}\n\n\n//data url\nconst uploadedDataURL = \"data/epidata.json\";\n\nclass WorldMap extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            totalData1:[],\n            totalData2:[],\n            totalData3:[],\n            cases_day_country:[],\n            current_country : 'China'\n        };\n        //this.echartsReact = React.createRef()\n    }\n\n\n    getData() {\n        fetch(uploadedDataURL)\n            .then(response => response.json())\n            .then(data => {\n                //console.log(data)\n                this.setState({totalData1: data.world, totalData2: data.world, totalData3: data.world,cases_day_country: data.cases_day_country})\n                //console.log(this.state)\n\n            })\n            .catch(e => console.log('错误:', e))\n    }\n\n    getOption() {\n\n        const totalData1 = this.state.totalData1\n        const totalData2 = this.state.totalData2\n        const totalData3 = this.state.totalData3\n        const cases_day_country = this.state.cases_day_country\n        var current_country = this.state.current_country\n        //var current_country = 'United Kingdom'\n\n\n        //console.log(cases_day_country[current_country])\n\n        //console.log(getObjectValues(cases_day_country[current_country]))\n\n        const world_pieces = [\n            {\n                \"max\": 1000000,\n                \"min\": 100000,\n                \"label\": \"> 100000\"\n            },\n            {\n                \"max\": 100000,\n                \"min\": 50000,\n                \"label\": \"50000 - 100000\"\n            },\n            {\n                \"max\": 50000,\n                \"min\": 10000,\n                \"label\": \"10000 - 50000\"\n            },\n            {\n                \"max\": 10000,\n                \"min\": 5000,\n                \"label\": \"5000 - 10000\"\n            },\n            {\n                \"max\": 5000,\n                \"min\": 1000,\n                \"label\": \"1000 - 5000\"\n            },\n            {\n                \"max\": 1000,\n                \"min\": 500,\n                \"label\": \"500 - 1000\"\n            },\n            {\n                \"max\": 500,\n                \"min\": 0,\n                \"label\": \"0 - 500\"\n            },\n        ]\n\n        //\n        const option = {\n            animation: false,\n            title: {\n                text: 'Current hCoV-19 Infection Situation Worldwide',\n                subtext: 'Update Time: 2020-04-22',\n                left: 'center'\n            },\n            tooltip: {\n                trigger: 'item',\n\n                formatter: function(params) {\n                    //console.log(params)\n                 let tip = ''\n                 if (params.data) {\n                     if ('cured' in params.data && 'dead' in params.data)\n                     {\n                         tip =\n                             params.name +\n                             '：<br>确诊：' +\n                             params.data['value'] +\n                             '例<br>治愈：' +\n                             params.data['cured'] +\n                             '例<br>死亡：' +\n                             params.data['dead'] +\n                             '例<br>现存：' +\n                             params.data['active'] +\n                             '例'\n                     }\n                     return tip\n                 }\n                 }\n\n            },\n\n            visualMap: {\n                show: true,\n                type: 'piecewise',\n                pieces: world_pieces,\n                left: 'left',\n                top: 'bottom',\n                calculable: true\n\n                /*align: 'right',\n                top: '2%',\n                right: 0,*/\n            },\n\n            color:['red', 'blue', 'green'],\n\n            legend: {\n                orient: 'horizontal',\n                left: 'right',\n                data: ['Confirmed', 'Cured', 'Dead'],\n\n                //selectedMode: 'single',\n            },\n\n            toolbox: {\n                show: false,\n                orient: 'vertical',\n                left: 'right',\n                top: 'center',\n                feature: {\n                    dataView: {readOnly: false},\n                    restore: {},\n                    saveAsImage: {}\n                }\n            },\n            grid: {\n                left: '60%',\n                width: '40%'\n            },\n\n            geo: [{\n                 roam: true,\n                type: 'map',\n                map: 'world',\n                left: 'left',\n                right: 'middle',\n\n                label: {\n                    normal: {\n                        fontSize: '10',\n                        show: false\n                    },\n                    emphasis: {\n                        show: true\n                    }\n                },\n                /*itemStyle: {\n                 normal: {\n                 borderColor: '#aaa',\n                 areaColor: '#555'\n                 },\n                 }*/\n            }],\n\n            yAxis: [{\n                //type: 'value',\n                name: current_country,\n                boundaryGap: true,\n                splitLine: {\n                    show: false\n                },\n                axisLine: {\n                    show: true\n                },\n                axisTick: {\n                    show: true\n                },\n                //,\n                /*data:[1,2,3,4],\n                name: 'Cases'\n                min: 0,\n                max: 250,*/\n                //interval: 20000\n            }],\n\n            xAxis: [{\n                //type: 'value',\n                axisTick: {\n                    alignWithLabel: false\n                },\n                axisLine: {\n                    show: true\n                },\n                splitLine: {\n                    show: false\n                },\n                data: getObjectKeys(cases_day_country[current_country]),\n\n                //data:['a','b','c','d'],\n            }],\n\n            series: [\n                {\n                    z:0,\n                    name: 'Confirmed',\n                    type: 'map',\n                    showLegendSymbol: false,\n                    geoIndex: 0,\n\n                    /*label: {\n                     normal: {\n                     show: true\n                     },\n                     emphasis: {\n                     show: true\n                     }\n                     },*/\n\n                    data: totalData1,\n                },\n                {\n                    z:0,\n                    name: 'Cured', //cured\n                    type: 'map',\n                    geoIndex: 0,\n                    showLegendSymbol: false,\n                    //data: totalData2,\n                },\n                {\n                    z:0,\n                    name: 'Dead', //dead\n                    type: 'map',\n                    geoIndex: 0,\n                    showLegendSymbol: false,\n                    //data: totalData3,\n                },\n                {\n                    name: 'Confirmed',\n                    z: 2,\n                    type: 'bar',\n                    label: {\n                        normal: {\n                            show: false\n                        },\n                        emphasis: {\n                            show: true,\n                            position: 'top',\n                        }\n                    },\n                    yAxisIndex: 0,\n                    itemStyle: {\n                     emphasis: {\n                     color: \"rgb(0,153,78)\"\n                     }\n                     },\n                    //data: cases_day_country[current_country],\n                    data: getObjectValues(cases_day_country[current_country])\n                },\n                {\n                    name: 'Cured',\n                    z: 2,\n                    type: 'bar',\n                    label: {\n                        normal: {\n                            show: false\n                        },\n                        emphasis: {\n                            show: true,\n                            position: 'top'\n                        }\n                    },\n                    itemStyle: {\n                        emphasis: {\n                            color: \"rgb(0,153,78)\"\n                        }\n                    },\n                    data: getCuredValues(cases_day_country[current_country])\n                },\n                {\n                    name: 'Dead',\n                    z: 2,\n                    type: 'bar',\n                    label: {\n                        normal: {\n                            show: false\n                        },\n                        emphasis: {\n                            show: true,\n                            position: 'top'\n                        }\n                    },\n                    itemStyle: {\n                        emphasis: {\n                            color: \"rgb(0,153,78)\"\n                        }\n                    },\n                    data: getDeadValues(cases_day_country[current_country])\n                }\n            ]\n        }\n        //console.log(this.state)\n        return option;\n    }\n\n    componentWillMount() {\n    }\n\n    componentDidMount(){\n\n        //const { provinceName, mapList } = this.props\n\n        /*const province = provinceName ? provinceMap[provinceName] : ''\n\n        const chinaMapJson = await getChinaJson()\n        echarts.registerMap('china', chinaMapJson.data)*/\n\n        this.getData()\n\n        /*var myChart = echarts.init(document.getElementById('map'));\n         myChart.setOption(option);*/\n\n    };\n\n\n    onChartClick = (params)=>{\n        // Do what you want to do on click event. params depend on the  type of  chart\n        this.state.current_country = params.name\n        this.echartsReact.getEchartsInstance().setOption(this.getOption())\n        //console.log(params.name)\n        //console.log(this.echartsReact.props.option)\n    }\n\n    _onEvents = {\n        'click': this.onChartClick,\n        //'click': this.onChartClick.bind(this),\n        //'dataZoom': this.onDataZoom,\n    }\n\n    /*onChartReadyCallback=()=>{\n        setTimeout(()=>{\n            this.setState({\n                loadingChart: false\n            });\n        } ,2000);\n    }*/\n\n\n    render(){\n        return(\n            <ReactEcharts\n                ref={(e) => { this.echartsReact = e }}\n                className = 'mapbox'\n                option={this.getOption()}\n                notMerge={true}\n                onEvents= {this._onEvents}\n           />\n        )\n    }\n\n}\n\n// lazyUpdate={(this.getOption(),false)}\n//onChartReady={this.onChartReadyCallback}\n\nexport default WorldMap;","/**\n * Created by Yuan on 4/4/20.\n */\n\n\n\nimport React, {Component} from 'react';\nimport * as d3 from \"d3\";\n\nimport $ from 'jquery'\n\n\n//d3v4.13.0\n\nconst uploadedDataURL = \"data/2020-04-01-china-hap.json\"\n\n//const uploadedDataURL = \"data/2020-03-29-world-hap.json\"\n\n\n\n/*function  draw() {\n\n    const data = [12, 5, 6, 6, 9, 10]\n    const width = 300\n    const height = 200\n\n    //const data = this.props.data;\n\n    //const data = [12, 5, 6, 6, 9, 10];\n\n    /*const svg = d3.select(\"body\")\n     .append(\"svg\")\n     .attr(\"width\", w)\n     .attr(\"height\", h)\n     .style(\"margin-left\", 100);*/\n\n    /*const svg = d3.select(document.getElementById('d3-bar')).append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n\n    svg.selectAll(\"rect\")\n        .data(data)\n        .enter()\n        .append(\"rect\")\n        .attr(\"x\", (d, i) => i * 70)\n        .attr(\"y\", (d, i) => height - 10 * d)\n        .attr(\"width\", 65)\n        .attr(\"height\", (d, i) => d * 10)\n        .attr(\"fill\", \"green\")\n\n    svg.selectAll(\"text\")\n        .data(data)\n        .enter()\n        .append(\"text\")\n        .text((d) => d)\n        .attr(\"x\", (d, i) => i * 70)\n        .attr(\"y\", (d, i) => height - (10 * d) - 3)\n\n    console.log('draw ok')\n}*/\n\n\n\n\nclass Haplotype extends Component {\n\n    /*constructor(props){\n        super(props);\n        this.state = {\n            nodes:[],\n            links:[]\n        };\n    }\n\n    getData() {\n        fetch(uploadedDataURL)\n            .then(response => response.json())\n            .then(data => {\n                //console.log(data)\n                this.setState({nodes: data.nodes, links: data.links})\n                //console.log(this.state)\n                //console.log(this.state)\n\n            })\n            .catch(e => console.log('错误:', e))\n    }\n\n\n   os () {\n        let ua = navigator.userAgent,\n            isWindowsPhone = /(?:Windows Phone)/.test(ua),\n            isSymbian = /(?:SymbianOS)/.test(ua) || isWindowsPhone,\n            isAndroid = /(?:Android)/.test(ua),\n            isFireFox = /(?:Firefox)/.test(ua),\n            isChrome = /(?:Chrome|CriOS)/.test(ua),\n            isTablet = /(?:iPad|PlayBook)/.test(ua) || (isAndroid && !/(?:Mobile)/.test(ua)) || (isFireFox && /(?:Tablet)/.test(ua)),\n            isPhone = /(?:iPhone)/.test(ua) && !isTablet,\n            isPc = !isPhone && !isAndroid && !isSymbian;\n        //console.log(isChrome)\n        return {\n            isTablet: isTablet,\n            isPhone: isPhone,\n            isAndroid: isAndroid,\n            isPc: isPc\n        };\n    }*/\n\n    drawhap() {\n\n        d3.json(uploadedDataURL, function (graph) {\n\n            console.log(graph)\n\n            d3.selectAll(\".svgContainer > *\").remove();\n\n\n            console.log('in drawhap')\n\n            const colorCustom = [\"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#1c7f7c\",\n                \"#7f7f7f\", \"#bcbd22\", \"#17becf\", \"#1f77b4\",\n                \"#ff7f0e\", \"#2ca02c\", '#d48265', '#2f4554',\n                '#61a0a8', '#91c7ae', '#749f83', '#ca8622',\n                '#bd4829', '#546570', \"#606dff\", \"#1d83f4\",\n                \"#2f67b9\", \"#4548f4\", \"#123754\", \"#7f7f7f\",\n                \"#f468c2\", \"#ffeb3b\", \"#346270\", \"#ff2f23\",\n                \"#cf9e19\", \"#2507f4\", \"#f427ab\", \"#D84E0C\",\n                \"#9c0df4\", \"#2b1a7f\", \"#ffeb3b\", \"#699f2c\",\n                \"#ff19ec\", \"#75fff3\", \"#ca84ff\", \"#ff0c1b\",\n                \"#1bff2c\", \"#b695f4\", \"#197f59\", \"#4548f4\",\n                \"#419f42\", \"#2325f4\", \"rgba(62,21,60,0.91)\"\n            ];\n\n\n            console.log('data nodes', graph.nodes)\n            console.log('data links', graph.links)\n\n            // 数据预处理\n            let country = graph.nodes.map(a => a.pieChart.map(a => a.color))\n\n            console.log('country', country)\n\n            let uniqueCountry = []\n            country.forEach(c => uniqueCountry = uniqueCountry.concat(c))\n            uniqueCountry = Array.from(new Set(uniqueCountry))\n            let countCount = uniqueCountry.map(a => 0)\n\n            //safari sort 兼容性有问题\n            graph.nodes.forEach(a => a.pieChart.forEach(b => countCount[uniqueCountry.indexOf(b.color)] += a.radius * b.percent))\n            uniqueCountry.forEach((a, i) => uniqueCountry[i] = {\"country\": a, \"count\": countCount[i]})\n            uniqueCountry.sort((a, b) => {\n                return (b.count > a.count) ? 1 : (b.count < a.count) ? -1 : 0;\n            }) //按照国家或城市的菌株数量排序\n\n\n            // 不确定有何作用，暂时屏蔽\n            // graph.nodes.forEach(b =>\n            //     b.nodeLinks = graph.links.filter(\n            //         a => a.target === b.id || a.source === b.id\n            //     ).length\n            // )\n\n            var DEFAULT_OPTIONS = {\n                radius: 30,\n                outerStrokeWidth: 10,\n                parentNodeColor: 'white',\n                showPieChartBorder: false,\n                pieChartBorderColor: 'white',\n                pieChartBorderWidth: '2',\n                showLabelText: false,\n                labelText: 'text',\n                labelColor: 'blue'\n            };\n\n            function drawParentCircle(nodeElement, options) {\n                let outerStrokeWidth = 1;\n                let radius = options.radius;\n                let parentNodeColor = \"white\";\n\n                nodeElement.insert(\"circle\")\n                    .attr(\"id\", \"parent-pie\")\n                    .attr(\"r\", radius)\n                    .attr(\"fill\", function (d) {\n                        return parentNodeColor;\n                    })\n                    .attr(\"stroke\", function (d) {\n                        return parentNodeColor;\n                    })\n                    .attr(\"stroke-width\", outerStrokeWidth)\n                ;\n            }\n\n\n            function drawPieChart(nodeElement, percentages, options) {\n                var radius = options.radius;\n                var halfRadius = radius / 2;\n                var halfCircumference = 2 * Math.PI * halfRadius;\n                var arc = d3.svg.arc();\n\n                var pie = d3.layout.pie()\n                    .value(function (d) {\n                        return d.percent;\n                    })\n                var data_ready = pie(d3.entries(percentages))\n\n                var percentToDraw = 0;\n                for (var p in percentages) {\n                    nodeElement\n                        .insert('path', '#parent-pie + *')\n                        .attr('d', arc({\n                            innerRadius: 0,\n                            outerRadius: radius,\n                            startAngle: Math.PI * 2 * percentToDraw / 100,\n                            endAngle: Math.PI * 2 * (percentToDraw + percentages[p].percent) / 100\n                        })\n                    )\n                        .attr('fill', colorCustom[uniqueCountry.map(a => a.country).indexOf(percentages[p].color)])\n                        .attr(\"stroke\", colorCustom[uniqueCountry.map(a => a.country).indexOf(percentages[p].color)])\n                        .attr(\"class\", percentages[p].color)\n                        .on(\"mouseleave\", d => {\n                            d3.select(\"#test\").remove()\n                            d3.selectAll(\".\" + percentages[p].color)\n                                .attr(\"stroke\", null)\n                        }\n                    )\n                    /*.on(\"mouseover\", function (d) {\n                     // d3.select(\"#test\").remove()\n                     const selection = svg.append('g')\n                     .attr(\"id\", \"test\")\n                     .attr(\"transform\", \"translate(\" + d3.select(this)._groups[0][0].__data__.x + \",\" + (d3.select(this)._groups[0][0].__data__.y - 20) + \")\");\n\n                     const backgroundRect = selection.selectAll('rect')\n                     .data([null]);\n\n                     const textHeight = d3.select(this)._groups[0][0].__data__.pieChart.length\n                     backgroundRect.enter().append('rect')\n                     .merge(backgroundRect)\n                     .attr('rx', 10)\n                     .attr('width', 150)\n                     .attr('height', (textHeight+1) * 15)\n                     .attr('fill', '#d4d4d5')\n                     .attr('opacity', 0.8);\n\n                     const groups = selection.selectAll('.tick2')\n                     .data(d3.select(this)._groups[0][0].__data__.pieChart);\n                     const groupsEnter = groups\n                     .enter().append('g')\n                     .attr('class', 'tick2');\n                     groupsEnter\n                     .merge(groups)\n                     .attr('transform', (d, i) =>\n                     `translate(0, ${(i+1) * 13})`\n                     );\n                     groups.exit().remove();\n\n                     // console.log(groupsEnter);\n                     groupsEnter.append('text')\n                     .merge(groups.select('text'))\n                     .text(d => {\n                     // console.log(d);\n                     return d.color + \":\" + Math.round(d.percent) + \"%\";\n                     }\n                     )\n                     .attr('dy', '0.32em')\n                     .attr('x', 10);\n\n                     d3.selectAll(\".\" + percentages[p].color)\n                     .attr(\"stroke-width\", \"5px\")\n                     .attr(\"stroke\", \"#ffcc00\")\n\n                     d3.select(\"#info\").text(\"\")\n                     d3.select(\"#detail\").text(\"\")\n\n\n\n                     // d3.select(\"#info\")\n                     //     .selectAll(\"tspan\")\n                     //     .data(d3.select(this)._groups[0][0].__data__.pieChart)\n                     //     .enter()\n                     //     .append('tspan')\n                     //     .text(d => d.color + \":\" + Math.round(d.percent) + \"%\")\n                     //     .attr('y', d3.select(this)._groups[0][0].__data__.y)\n                     //     .attr('dy', (d,i) => i + 'em')\n                     //     .attr('x', d3.select(this)._groups[0][0].__data__.x + halfRadius)\n\n                     d3.select(\"#detail\").text(\"Virus\").attr('x', width / 9 * 7-30)\n                     d3.select(\"#detail\")\n                     .selectAll(\"tspan\")\n                     .data(d3.select(this)._groups[0][0].__data__.Virus)\n                     .enter()\n                     .append('tspan')\n                     .text(d => d.name + \" (\"+d.date+\")\")\n                     .on('click', function (d) {\n                     window.open(\"https://bigd.big.ac.cn/ncov/genome/accession?q=\" + d.acc, \"_blank\");\n                     })\n                     .on(\"mouseover\", function (d) {\n                     d3.select(this).style(\"cursor\", \"pointer\")\n                     })\n                     .attr(\"font-size\", \"12px\")\n                     .attr('fill', \"rgb(59,129,204)\")\n                     .attr('dy', '1em')\n                     .attr('x', width / 9 * 7-30)\n\n                     });*/\n                    percentToDraw += percentages[p].percent;\n                }\n\n            }\n\n            function drawTitleText(nodeElement, options) {\n                let text = options.labelText\n\n                nodeElement.append(\"text\")\n                    .text(String(text))\n                    .attr(\"fill\", \"white\")\n                    .attr(\"dy\", 4)\n                    .attr(\"dx\", -4)\n                    .attr(\"class\", \"t1\")\n                    .attr(\"font-size\", \"10px\");\n                ;\n            }\n\n            let NodePieBuilder = {\n                drawNodePie: function (nodeElement, percentages, options) {\n                    //console.log(nodeElement)\n                    drawParentCircle(nodeElement, options); //外层圈\n                    //console.log(nodeElement)\n                    drawPieChart(nodeElement, percentages, options); //扇形\n                    drawTitleText(nodeElement, options); //圈里面的文字\n                }\n            };\n\n            //自适应\n            function responsivefy(svg) {\n                let container = d3.select(svg.node().parentNode),\n                    width = parseInt(svg.style(\"width\")),\n                    height = parseInt(svg.style(\"height\")),\n                    aspect = width / height;\n                svg.attr(\"viewBox\", \"0 0 \" + width + \" \" + height)\n                    .attr(\"perserveAspectRatio\", \"xMinYMid\")\n                    .call(resize);\n                d3.select(window).on(\"resize.\" + container.attr(\"id\"), resize);\n\n                function resize() {\n                    let targetWidth = parseInt(container.style(\"width\"));\n                    svg.attr(\"width\", targetWidth);\n                    svg.attr(\"height\", Math.round(targetWidth / aspect));\n                }\n            }\n\n            //let winWidth = $('.ui.container').width();\n            let winWidth = \"100%\";\n            let winHeight = 600;\n            let imageCenter;\n            let legendTextSize = 8;\n\n            //if (this.os.isAndroid || this.os.isPhone || this.os.isTablet) {\n            //    winWidth = document.body.clientWidth || document.documentElement.clientWidth || window.screen.width\n            //    winHeight = 500;\n            //    legendTextSize = 10;\n            //}\n\n            let svg = d3.select(\".svgContainer\").append(\"svg\")\n                .attr(\"width\", winWidth)\n                .attr(\"height\", winHeight)\n            //.attr(\"viewBox\", `${-winWidth/4} ${-winHeight/4} ${winWidth*2} ${winHeight*2}`)\n                .call(responsivefy);\n\n            let width = svg.attr(\"width\")\n            let height = svg.attr(\"height\")\n\n            //console.log(width)\n            //console.log(height)\n\n\n            // if (this.os.isAndroid || this.os.isPhone || this.os.isTablet) {\n            //     imageCenter = d3.forceCenter(width / 9 * 6, height / 2);\n            // }else{\n            //    imageCenter = d3.forceCenter(width / 9 * 4, height / 2.5);\n            // }\n\n\n            /*var visF = svg.append(\"g\").attr(\"id\", \"visF\");\n\n            function redrawVisF () {\n                svg.attr(\"transform\",\"translate(\" + d3.event.translate + \")\" + \" scale(\" + d3.event.scale + \")\");\n            }*/\n\n            function rescale() {\n                var trans=d3.event.translate;\n                var scale=d3.event.scale;\n\n                svg.attr(\"transform\",\n                    \"translate(\" + trans + \")\"\n                    + \" scale(\" + scale + \")\");\n            }\n\n            let g = svg.append('g')\n                //.call(d3.behavior.zoom().on('zoom', rescale))\n            .call(d3.behavior.zoom().on('zoom', () => {\n               g.attr('transform', d3.event.transform);\n                    //g.attr('transform',redrawVisF);\n            })); //图像的载体\n\n            /*if (!mousedown_node && !mousedown_link) {\n                // allow panning if nothing is selected\n                svg.call(d3.behavior.zoom().on(\"zoom\"), rescale);\n                return;\n            }\n\n            if (!mousedown_node && !mousedown_link) {\n                // allow panning if nothing is selected\n                force.start();\n                svg.call(d3.behavior.zoom().on(\"zoom\"), null);\n                return;\n            }*/\n\n\n            var lineScale = d3.scale.log()\n                .domain(d3.extent(graph.links.map(a => a.distance)))\n                .range([width / 4 * 35 / 300, width / 4]);\n\n            var nodeScale = d3.scale.sqrt()\n                .domain(d3.extent(graph.nodes.map(a => a.radius)))\n                .range([width / 4 * 40 / 300 * 12 / 40, width / 4 * 40 / 300]);\n\n            /*var simulation = d3.forceSimulation()\n             .force(\"link\", d3.forceLink()\n             .id(function (d) {\n             return d.id;\n             })\n             .distance(function (d) {\n             return lineScale(d.distance) + nodeScale(d.source.radius) / 2 + nodeScale(d.target.radius) / 2\n             }).strength(1)) //link长度的距离固定\n             .force(\"charge\", d3.forceManyBody().distanceMin(50))\n             .force(\"center\", imageCenter);*/\n\n            //var nodes = {};\n            var nodes = graph.nodes;\n            var links = graph.links;\n\n            /*var links = [\n             {source: 'H', target: 'I'},\n             {source: 'H', target: 'J'},\n             {source: 'I', target: 'J'},\n             {source: 'J', target: 'K'},\n             ];*/\n\n\n            //var links = []\n\n            /*var sources = [];\n            var targets = [];\n\n\n            for (var i = 0; i < graph.links.length; i++) {\n                sources[i] = parseInt(graph.links[i].source)\n                targets[i] = parseInt(graph.links[i].target)\n            }\n\n            console.log('sources', sources)\n\n\n            links.forEach(function (link, index) {\n                //const sindex = parseInt(link.source.split(\"_\")[1])\n                //const tindex = parseInt(link.target.split(\"_\")[1])\n                link.source = nodes[sources[index]];\n                link.target = nodes[targets[index]];\n            });*/\n\n\n\n            links.forEach(function(link) {\n                var source = link.source.id\n                var target = link.target.id\n\n                console.log(source,target)\n\n                //if (typeof d.source == \"number\") { d.source = nodes[d.source]; }\n                //if (typeof d.target == \"number\") { d.target = nodes[d.target]; }\n\n                /*if (typeof graph.nodes[link.source] === 'undefined') {\n                    console.log('undefined source', link);\n                }\n                if (typeof graph.nodes[link.target] === 'undefined') {\n                    console.log('undefined target', link);\n                }*/\n\n                //index - 1\n\n                link.source = nodes[link.source];\n                link.target = nodes[link.target];\n\n                //link.source = nodes[source];\n                //link.target = nodes[target];\n                //d.source = nodes[0]\n                //d.target = nodes[1]\n\n\n             });\n\n            console.log(nodes)\n            console.log(links)\n\n            var w = 800*1.5,\n                h = winHeight\n\n            var force = d3.layout.force()\n                .size([w, h])\n                .nodes(nodes)\n                .links(links)\n                //.linkDistance(10)\n                .linkDistance(function (d) {\n                    return lineScale(d.distance) + nodeScale(d.source.radius) / 2 + nodeScale(d.target.radius) / 2\n                })\n                .gravity(.05)\n                .charge(-150)\n\n                //.gravity(.15)\n                //.friction(.8)\n                //.linkStrength(0.5)\n                //.charge(-200)\n                //.chargeDistance(500)\n                .on(\"tick\", ticked)\n                .start();\n\n            //console.log('force nodes', nodes)\n            //console.log('force links', links)\n\n            /*var link = svg.selectAll('.link')\n             .data(links)\n             .enter().append('line')\n             .attr('class', 'link');\n\n             var node = svg.selectAll('.node')\n             .data(force.nodes())\n             .enter().append('circle')\n             .attr('class', 'node')\n             .attr('r', width * 0.01)*/\n\n            var link = g\n                .attr(\"class\", \"links\")\n                .selectAll(\"line\")\n                //.data(links)\n                .data(links)\n                .enter().append(\"line\")\n                .attr(\"stroke-width\", function (d) {\n                    return Math.sqrt(d.value);\n                })\n                .attr(\"stroke\", \"#999\")\n                .on(\"mouseover\", function (d) {\n                    d3.select(\"#info\")\n                        .text(\"distance: \" + d.distance)\n                })\n\n            var node = g\n                .attr(\"class\", \"nodes\")\n                .selectAll(\"g\")\n                //.data(nodes)\n                .data(nodes)\n                .enter()\n                .append(\"g\")\n                .attr(\"radius\", function (d) {\n                    return d.radius;\n                })\n            /*.call(d3.behavior.drag()\n                .on(\"start\", dragstarted)\n                .on(\"drag\", dragged)\n                .on(\"end\", dragended));*/\n\n            node.each(function (d) {\n                NodePieBuilder.drawNodePie(d3.select(this), d.pieChart, {\n                    parentNodeColor: \"white\",\n                    outerStrokeWidth: 1,\n                    showLabelText: true,\n                    labelText: d.radius,\n                    radius: nodeScale(d.radius)\n                });\n            });\n\n            //node.selectAll(\"path\")\n            //    .attr(\"transform\", d => \"translate(\" + d.x + \",\" + d.y + \")\")\n\n            //console.log('nodes',graph.nodes)\n            //console.log('links',graph.links)\n\n\n            /*simulation\n             .nodes(graph.nodes)\n             .on(\"tick\", ticked);\n\n             simulation.force(\"link\")\n             .links(graph.links);*/\n\n            var legendContainer = svg.append(\"g\")\n             .attr('transform', `translate(10, 40)`)\n             .selectAll('.tick')\n             .data(uniqueCountry)\n             .enter().append('g')\n             .attr('class', 'tick');\n\n             const groups = svg.append(\"g\")\n             .attr('transform', `translate(10, 40)`)\n             .selectAll('.tick')\n             .data(uniqueCountry);\n\n            //console.log('groups', groups)\n\n            const groupsEnter = groups\n             .enter().append('g')\n             .attr('class', 'tick')\n             .on(\"mouseover\", d =>\n             {\n             d3.selectAll(\".\" + d.country)\n             .attr(\"stroke-width\", \"5px\")\n             .attr(\"stroke\", \"#ffcc00\")\n             }\n             )\n             .on(\"mouseleave\", d =>\n             {\n             d3.selectAll(\".\" + d.country)\n             .attr(\"stroke\", null)\n             }\n             );\n\n            groupsEnter\n             //.merge(groups)\n             .attr('transform', (d, i) =>\n             `translate(0, ${i * 20})`\n             );\n             groups.exit().remove();\n\n\n             groupsEnter.append('rect')\n             //.merge(groups.select('rect'))\n             .attr(\"width\", 30)\n             .attr(\"height\", 10)\n             .attr(\"fill\", (d, i) => colorCustom[i]);\n\n             groupsEnter.append('text')\n             //.merge(groups.select('text'))\n             .text(d => d.country + \" (\" + Math.round(d.count / 100) + \")\")\n             .attr(\"fill\", \"#555\")\n             .attr('x', 35)\n             .attr('dy', 9)\n             .attr(\"font-size\", legendTextSize);\n\n             /*svg.append(\"text\")\n             // .text(\"Country\")\n             .attr(\"fill\", \"black\")\n             .attr(\"dx\", width / 12)\n             .attr(\"dy\", 110)\n             .attr(\"font-size\", \"15px\");\n\n             let textPanel = svg.append(\"text\")\n             .attr(\"x\", width / 9 * 6-30)\n             .attr(\"y\", 30)\n             .attr(\"id\", \"info\")\n             .text(\"\")\n             .attr(\"font-size\", \"15px\")\n             .style(\"fill\", \"#555\")\n\n             textPanel = svg.append(\"text\")\n             .attr(\"x\", width / 9 * 7-30)\n             .attr(\"y\", 30)\n             .attr(\"id\", \"detail\")\n             .text(\"\")\n             .attr(\"font-size\", \"15px\")\n             .style(\"fill\", \"#555\")*/\n\n\n            function ticked() {\n                link\n                    .attr(\"x1\", function (d) {\n                        return d.source.x;\n                    })\n                    .attr(\"y1\", function (d) {\n                        return d.source.y;\n                    })\n                    .attr(\"x2\", function (d) {\n                        return d.target.x;\n                    })\n                    .attr(\"y2\", function (d) {\n                        return d.target.y;\n                    });\n\n\n                node\n                    /*.attr(\"x\", function (d) {\n                        return d.x;\n                    })\n                    .attr(\"y\", function (d) {\n                        return d.y;\n                    })*/\n                    /*.attr(\"transform\", function (d) {\n                        return \"translate(\" + d.x + \",\" + d.y + \")\"\n                    })\n                    .attr('transform', function (d) {\n                        return 'translate(' + d.x + ',' + d.y + ')';\n                    })*/\n                    .selectAll(\"path\")\n                    .attr(\"transform\", d => \"translate(\" + d.x + \",\" + d.y + \")\")\n\n                d3.selectAll(\"circle\").attr(\"cx\", function (d) {\n                    return d.x;\n                })\n                    .attr(\"cy\", function (d) {\n                        return d.y;\n                    });\n\n                d3.selectAll(\"text.t1\")\n                    .attr(\"x\", function (d) {\n                        return d.x;\n                    })\n                    .attr(\"y\", function (d) {\n                        return d.y;\n                    });\n            }\n\n            function dragstarted(d) {\n                //if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n                d.fx = d.x;\n                d.fy = d.y;\n            }\n\n            function dragged(d) {\n                d.fx = d3.event.x;\n                d.fy = d3.event.y;\n            }\n\n            function dragended(d) {\n                /*if (!d3.event.active)\n                 simulation.alphaTarget(0);\n                 d.fx = null;\n                 d.fy = null;*/\n                d.fx = d3.event.x;\n                d.fy = d3.event.y;\n            }\n\n        })\n    }\n\n\n    /*plotNet() {\n\n        //d3.selectAll(\".svgContainer > *\").remove(); //清除当前图片\n        console.log('in plotNet')\n        console.log(this.state)\n\n        //d3.json(fileName, draw())\n\n        //var graph = d3.json(fileName)\n\n\n        //console.log(graph)\n\n        this.drawhap(this.state)\n\n        //console.log('plotNet')\n\n        //console.log(graph)\n\n    }*/\n\n\n    componentDidMount(){\n        //this.getData();\n        //console.log(this.state)\n        //this.plotNet()\n        this.drawhap()\n\n    };\n\n\n    render(){\n        //this.getData();\n        //plotNet(this.state);\n        return <div class='svgContainer'></div>\n        //return <div id='d3-bar' width='100%'></div>\n        /*return <div id={\"#\" + this.props.id}></div>*/\n    }\n}\n\nexport default Haplotype;","/**\n * Created by Yuan on 4/16/20.\n */\n\n\nimport React, {Component} from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport * as d3 from \"d3\";\n\n//const uploadedDataURL = \"data/ball_data.csv\"\n\nconst uploadedDataURL = \"data/mutation.csv\"\n\nclass Mutation extends Component {\n\n    componentDidMount() {\n        this.draw();\n    }\n\n    draw()\n    {\n            // set the dimensions and margins of the graph\n            var margin = {top: 40, right: 0, bottom: 0, left: 40},\n            width = 1000 - margin.left - margin.right,\n            height = 800 - margin.top - margin.bottom;\n\n            // append the svg object to the body of the page\n            var svg = d3.select(\"#mutation\")\n            .append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\",\n            \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n            //const colors = [\"#ffffff\",\"red\",\"gray\",\"gray\",\"blue\",\"magenta\"];\n\n            //Read the data\n            d3.csv(uploadedDataURL, function(data) {\n\n                //console.log(data)\n\n            // Labels of row and columns -> unique identifier of the column called 'group' and 'variable'\n            var myGroups = d3.map(data, function(d){return d.position;}).keys()\n            var myVars = d3.map(data, function(d){return d.acc_id;}).keys()\n\n                //console.log(myGroups)\n                //console.log(myVars)\n\n                /*for(var i=0; i<myGroups.length; i++){\n                    myGroups[i] = parseInt(myGroups[i]) + 266;\n                }*/\n\n            // Build X scales and axis:\n            var xScale = d3.scale.ordinal()\n                //.range([ 0, width ])\n            .domain(myGroups)\n            .rangeBands([ 0, width ])\n            //.padding(0.05);\n            //\n            var xTicks = xScale.domain().filter(function(d,i){ return !(i%50); } );\n\n                console.log(xScale.domain(),xTicks)\n\n\n\n            var  xAxis = d3.svg.axis().scale(xScale).orient(\"top\")\n                .tickValues(xTicks)\n                .tickSize(1)\n\n            svg.append(\"g\")\n            .style(\"font-size\", 8)\n                //.style(\"stroke\", \"black\")\n            .attr(\"transform\", \"translate(0,\" + 0 + \")\")\n            .call(xAxis)\n            //.select(\".domain\").remove();\n\n            // Build Y scales and axis:\n            var yScale = d3.scale.ordinal()\n            .domain(myVars)\n            .rangeBands([0, height])\n            //.padding(0.05);\n\n            /*var  yAxis = d3.svg.axis().scale(yScale).orient(\"left\").tickSize(0)\n            svg.append(\"g\")\n            .style(\"font-size\", 1)\n            .call(yAxis)\n            .select(\".domain\").remove();*/\n\n            // Build color scale\n            /*var myColor = d3.scaleSequential()\n            .interpolator(d3.interpolateInferno)\n            .domain([1,100])*/\n             //var myColor = d3.scale.ordinal()\n             //.domain([0,5])\n             //.range(colors)\n                //console.log(xScale)\n                //console.log(yScale)\n\n             var colors2 = [\"#ffffd9\",\"#edf8b1\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#253494\",\"#081d58\"]\n\n\n            // create a tooltip\n            var tooltip = d3.select(\"#mutation\")\n            .append(\"div\")\n                //.attr(\"width\", 100)\n                //.attr(\"height\", 100)\n            .style(\"opacity\", 0)\n            .attr(\"class\", \"tooltip\")\n            //.style(\"background-color\", \"white\")\n            //.style(\"background-color\", \"black\")\n            .style(\"border\", \"solid\")\n            .style(\"border-width\", \"1.5px\")\n            .style(\"border-radius\", \"5px\")\n            //.style(\"border-color\", colors2[])\n            .style(\"padding\", \"5px\")\n\n            // Three function that change the tooltip when user hover / move / leave a cell\n            var mouseover = function(d) {\n\n             tooltip\n            .style(\"opacity\", 1)\n                 //.html(\"The exact value of<br>this cell is: \" + d.value)\n                 //.style(\"left\", (d3.mouse(this)[0]+70) + \"px\")\n                 //.style(\"top\", (d3.mouse(this)[1]) + \"px\")\n\n             d3.select(this)\n            .style(\"stroke\", \"orange\")\n            .style(\"stroke-width\", 20)\n            .style(\"opacity\", 0.3)\n        }\n            var mousemove = function(d) {\n                console.log(d3.mouse(this))\n            tooltip\n            .html(\"Effect: \" + d.mutation_ann.split('|')[3] + \"<br>\" +\n                  \"Orf: \" + d.mutation_ann.split('|')[4] + \"<br>\" +\n                  //\"value: \" + + d.value + \"<br>\" +\n                  \"Nucleotide: \" + d.mutation_ann.split('|')[0] + \"<br>\" +\n                  //\"Codon: \" + d.mutation_ann.split('|')[1] + \"<br>\" +\n                  \"Amino Acid: \" + d.mutation_ann.split('|')[2] + \"<br>\" +\n                  \"Virus: \" + d.head + \"<br>\" +\n                  \"Position: \" + (parseInt(d.position))\n            )\n            //.style(\"left\", (d3.mouse(this)[0]) + \"px\")\n            //.style(\"top\", (d3.mouse(this)[1]) + \"px\")\n                .style(\"background-color\", colors2[0])\n                .style(\"left\", (d3.event.pageX) + \"px\")\n                .style(\"top\", (d3.event.pageY) + \"px\")\n                .style(\"opacity\", 1)\n\n        }\n            var mouseleave = function(d) {\n            tooltip\n            .style(\"opacity\", 0)\n\n             d3.select(this)\n            .style(\"stroke\", \"none\")\n            .style(\"opacity\", 1)\n        }\n\n            // add the squares\n            var enterGroup = svg.selectAll()\n                .data(data, function(d) {\n                    if (d.value !=0)\n                        //return d\n                        return d.position+':'+d.acc_id;\n                })\n            .enter()\n            .append(\"rect\")\n            .attr(\"x\", function(d) { return xScale(d.position) })\n            .attr(\"y\", function(d) { return yScale(d.acc_id) })\n            //.attr(\"rx\", 4)\n            //.attr(\"ry\", 4)\n            .attr(\"width\", xScale.rangeBand())\n            .attr(\"height\", yScale.rangeBand())\n              //  .attr(\"width\", 4)\n              //  .attr(\"height\", 4)\n            .style(\"fill\", function(d) {\n                    //non-coding\n                        if (d.value == 1)\n                        return \"cyan\"\n                    //Del\n                        if (d.value == 2)\n                        return \"gray\"\n                    //Unknown\n                        if (d.value == 3)\n                        return \"gray\"\n                    //Syn\n                        if (d.value == 4)\n                        return \"blue\"\n                    //Non-Syn\n                        if (d.value == 5)\n                        return \"magenta\"\n                } )\n            //.style(\"stroke-width\", 0)\n            //.style(\"stroke\", \"none\")\n            //.style(\"opacity\", 0.8)\n            .on(\"mouseover\", mouseover)\n            .on(\"mousemove\", mousemove)\n            .on(\"mouseleave\", mouseleave)\n        })\n\n            // Add title to graph\n\n\n            // Add subtitle to graph\n            svg.append(\"text\")\n            .attr(\"x\", 0)\n            .attr(\"y\", -25)\n            .attr(\"text-anchor\", \"left\")\n            .style(\"font-size\", \"14px\")\n            //.style(\"fill\", \"grey\")\n            .style(\"max-width\", 400)\n            .text(\"Colors represent mutations, magenta: Non-synonymous, blue: Synonymous. (Loading...)\");\n\n\n\n    }\n\n    draw1()\n    {\n        const mutation_width = 600;\n        const mutation_height = 800;\n\n        //console.log('heatmap draw')\n        var array_data = [];\n        // 一句话定义了众多变量， 定义了块儿的位置、宽高、小格子的边长等等与布局有关的变量\n        var margin = { top: 30, right: 0, bottom: 150, left: 50 },\n            //width = 960 - margin.left - margin.right,        // 所有格子区域的宽度，即Heatmap的宽度\n            //height = 1830 - margin.top - margin.bottom,\n            width = mutation_width - margin.left - margin.right,\n            height = mutation_height - margin.top - margin.bottom,\n            gridSize = Math.floor(height / 24),    // 求地板，即去掉小数部分，width分成24份\n            legendElementWidth = gridSize * 2,    // 底下长条的长度，是格子边长的两倍\n            buckets = 9,        // 一共9种颜色级别\n            colors = [\"#ffffd9\",\"#edf8b1\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#253494\",\"#081d58\"],\n        // alternatively colorbrewer.YlGnBu[9]\n        // days = [\"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\"],\n        //times = [\"1a\", \"2a\", \"3a\", \"4a\", \"5a\", \"6a\", \"7a\", \"8a\", \"9a\", \"10a\", \"11a\", \"12a\", \"1p\", \"2p\", \"3p\", \"4p\", \"5p\", \"6p\", \"7p\", \"8p\", \"9p\", \"10p\", \"11p\", \"12p\"];\n            tests = [\"G\",\"MIN\",\"PTS\",\"FGM\",\"FGA\",\"FGP\",\"FTM\",\"FTA\",\"FTP\",\"3PM\",\"3PA\",\"3PP\",\"ORB\",\"DRB\",\"TRB\",\"AST\",\"STL\",\"BLK\",\"TO\",\"PF\"];\n        // 函数，读取 CSV 文件\n        d3.csv(uploadedDataURL, //function(d) {}, function(error, data) {} );\n\n            // 每一行的数据\n            /*function(d) {\n             return {\n             day: +d.day,\n             hour: +d.hour,\n             value: +d.value\n             };\n             },*/\n\n            function(error, data) {\n\n                console.log(data)\n                /*if(error){\n                 console.log(error);\n                 }\n                 console.log(csvdata);*/\n                // colorScale：颜色级别\n                var colorScale = d3.scale.quantile()        // 按分位数取值，可使每个区域内元素个数相等\n                    .domain([0, buckets - 1, d3.max(data, function (d) { return d.G; })])  // 定义域\n                    // domain([0, n, 数据的最大值]);\n                    .range(colors);    // 值域：是颜色数组，函数的返回值是代表某种颜色的字符串\n\n                // 设置chart，svg\n                var svg = d3.select(\"#mutation_heatmap\").append(\"svg\") // 选择“chart”（就是div），加入一个svg，设置属性跟div一样大\n                    .attr(\"width\", width + margin.left + margin.right)\n                    .attr(\"height\", height + margin.top + margin.bottom)\n                    .append(\"g\")    // 在svg内加入一个g（group组），并设置元素g的显示位置\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n                // 编辑姓名行\n                /*var dayLabels = svg.selectAll(\".nameLabel\")\n                    .data(data)\n                    .enter()    // 为data中每一项创建一个\".dayLabel\"\n                    .append(\"text\")    // 为days中每一项创建一的\".dayLabel\"添加文本，下面全是设置文本的属性\n                    .text(function (d, i) { return data[i].name; })\n                    .attr(\"x\", 0)\n                    .attr(\"y\", function (d, i) { return i * gridSize; })\n                    .style(\"text-anchor\", \"end\")\n                    .attr(\"transform\", \"translate(-6,\" + gridSize / 1.5 + \")\")\n                    .attr(\"class\", function (d, i)\n                    { return ((i >= 0 && i <= 4) ? \"nameLabel mono axis axis-workweek\" : \"nameLabel mono axis\"); }\n                );*/\n\n                // 编辑测试项行\n                var timeLabels = svg.selectAll(\".testLabel\")\n                    .data(tests)\n                    .enter().append(\"text\")\n                    .attr(\"font-size\",10)\n                    .text(function(d) { return d; })\n                    .attr(\"x\", function(d, i) { return i * gridSize; })\n                    .attr(\"y\", -10)\n                    .style(\"text-anchor\", \"middle\")\n                    //.attr(\"transform\", \"translate(\" + gridSize / 2 + \", -6)\")\n                    .attr(\"transform\", function (d, i) {\n                        return \"rotate(90,\" + i * gridSize +\",\"+-10+\")\";\n                    })\n                    //.attr(\"transform\", \"rotate(90)\")\n                    .attr(\"class\", function(d, i) {\n                        return ((i >= 7 && i <= 16) ? \"testLabel mono axis axis-worktime\" : \"testLabel mono axis\"); }\n                );\n\n                // 画出格子，暂不涂色，color[0]\n                for (var i = 0; i < 50; i++){\n                    array_data[i*20] = data[i].G;\n                    array_data[i*20+1] = data[i].MIN;\n                    array_data[i*20+2] = data[i].PTS;\n                    array_data[i*20+3] = data[i].FGM;\n                    array_data[i*20+4] = data[i].FGA;\n                    array_data[i*20+5] = data[i].FGP;\n                    array_data[i*20+6] = data[i].FTM;\n                    array_data[i*20+7] = data[i].FTA;\n                    array_data[i*20+8] = data[i].FTP;\n                    array_data[i*20+9] = data[i].P3PM;\n                    array_data[i*20+10] = data[i].P3PA;\n                    array_data[i*20+11] = data[i].P3PP;\n                    array_data[i*20+12] = data[i].ORB;\n                    array_data[i*20+13] = data[i].DRB;\n                    array_data[i*20+14] = data[i].TRB;\n                    array_data[i*20+15] = data[i].AST;\n                    array_data[i*20+16] = data[i].STL;\n                    array_data[i*20+17] = data[i].BLK;\n                    array_data[i*20+18] = data[i].TO;\n                    array_data[i*20+19] = data[i].PF;\n                }\n\n\n                var heatMap = svg.selectAll(\".score\")\n                    .data(array_data)\n                    .enter()        // 为data中每一项创建一个\".hour\"\n                    .append(\"rect\")\n                    .attr(\"x\", function(d, i){ return (i % 20)*gridSize;})\n                    .attr(\"y\", function(d, i){ return parseInt(i / 20)*gridSize;})\n                    .attr(\"rx\", 6)\n                    .attr(\"ry\", 6)\n                    //.attr(\"class\", \"hour bordered\")\n                    .attr(\"width\", gridSize)\n                    .attr(\"height\", gridSize)\n                    .style(\"fill\", \"#FFFFFF\");\n\n                // duration(1000) 在1000ns也就是1s内将格子图上色\n                heatMap.transition().duration(1000)\n                    .style(\"fill\", function(d) {\n                        if (d < 10)\n                        return \"#FFFFFF\";\n                        else\n                        return colorScale(d);\n                    });\n\n                // 鼠标停留显示value\n                heatMap.append(\"title\").text(function(d) { return d.G; });\n\n                // legend 是一个有7个组的什么东西，，，\n               /* var legend = svg.selectAll(\".legend\")\n                    .data([0].concat(colorScale.quantiles()), function(d) { return d; })    // 由data获得的元素个数为7\n                    .enter().append(\"g\")\n                    .attr(\"class\", \"legend\");\n\n                legend.append(\"rect\")\n                    .attr(\"x\", function(d, i) { return legendElementWidth * i; })\n                    .attr(\"y\", height)\n                    .attr(\"width\", legendElementWidth)\n                    .attr(\"height\", gridSize / 2)\n                    .style(\"fill\", function(d, i) { return colors[i]; });\n\n                legend.append(\"text\")\n                    .attr(\"class\", \"mono\")\n                    .text(function(d) { return \">= \"+Math.round(d); })\n                    .attr(\"x\", function(d, i) { return legendElementWidth * i; })\n                    .attr(\"y\", height + gridSize);*/\n            });\n    }\n\n    render()\n    {\n        return <div id=\"mutation\"></div>\n    }\n}\n\nexport default Mutation;","/**\n * Created by Yuan on 4/17/20.\n */\n\nimport React, {Component} from 'react';\nimport { NavLink } from \"react-router-dom\";\n\n\nimport Phyloeny from './Phylogeny'\nimport Mutation from './Mutation'\n\nclass TreeMutation extends Component {\n    render(){\n\n        return  <div id='tree_mutation'>\n            <Phyloeny/> <Mutation/>\n        </div>\n    }\n}\n\nexport default TreeMutation;","import React, {Component} from 'react';\nimport {useState} from 'react'\nimport ReactDOM from 'react-dom';\nimport './App.css';\n\n\n//import { ConfigProvider, DatePicker, message } from 'antd';\n// 由于 antd 组件的默认文案是英文，所以需要修改为中文\n//import zhCN from 'antd/es/locale/zh_CN';\n//import moment from 'moment';\n//import 'moment/locale/zh-cn';\n\n//import { Button } from 'antd';\nimport { Tabs } from 'antd';\nimport { Layout } from 'antd';\nimport { Card } from 'antd';\n\n//import { AppleOutlined, AndroidOutlined } from '@ant-design/icons';\n\n\n//import StickyFooter from 'react-sticky-footer';\n//import Visualization from 'coronavirus-visualization/viz.js'\n\n\nimport BarChart from './component/BarChart'\n//import Tree from './component/Tree'\n//import Heatmap from './component/Heatmap'\nimport Phylogeny from './component/Phylogeny'\nimport MyHeader from './component/MyHeader'\nimport MyFooter from './component/MyFooter'\nimport ChinaMap from './component/ChinaMap'\nimport WorldMap from './component/WorldMap'\n\nimport Haplotype from './component/Haplotype'\n\nimport TreeMutation from './component/TreeMutation.js'\n\n\n//moment.locale('zh-cn');\n\n\n\nclass App extends Component {\n\n\n  /**<div>\n   <Tree data={this.state.data} width={this.state.width} height={this.state.height} />\n   </div>\n   <div className=\"App\">\n   <BarChart data={this.state.data} width={this.state.width} height={this.state.height} />\n   </div>**/\n\n\n  /**<StickyFooter\n   bottomThreshold={50}\n   normalStyles={{\n    backgroundColor: \"#999999\",\n    padding: \"2rem\"\n    }}\n   stickyStyles={{\n    backgroundColor: \"rgba(255,255,255,.8)\",\n    padding: \"2rem\"\n    }}\n   >\n   Add any footer markup here\n   </StickyFooter>**/\n\n  /*function App() {\n   return (\n   <div className=\"App\">\n   <header className=\"App-header\">\n   <img src={logo} className=\"App-logo\" alt=\"logo\" />\n   <p>\n   Edit <code>src/App.js</code> and save to reload.\n   </p>\n   <a\n   className=\"App-link\"\n   href=\"https://reactjs.org\"\n   target=\"_blank\"\n   rel=\"noopener noreferrer\"\n   >\n   Learn React\n   </a>\n   </header>\n   </div>\n   );\n   }*/\n\n  state1 = {\n    data: [12, 5, 6, 6, 9, 10],\n    width: 300,\n    height: 200,\n    id: 'root'\n  }\n\n    state2 = {\n        province: ''\n    }\n\n\n  /**<BarChart data={this.state1.data} width={this.state1.width} height={this.state1.height}/>**/\n\n  render () {\n\n    //const [province, _setProvince] = useState(null)\n    const { Header, Footer, Sider, Content } = Layout;\n    const { TabPane } = Tabs;\n\n    const province = this.state2.province\n\n        //<Button type=\"primary\">Button</Button>\n\n        /*<h3> { province ? `· ${province.name}` : false }\n      {\n          province ? <small\n              onClick={() => this.state.country = \"China\"}\n              >返回</small> :  <small\n              onClick={() => this.state.country = \"China\"}\n              >返回</small>\n      }\n      </h3>*/\n\n        /*<Card title=\"疫情地图\">\n          <WorldMap country={this.state.country} onClick={() => this.state.country = \"China\"}/>\n          </Card>*/\n\n      return (\n          <div>\n              <MyHeader province={this.state2.province}/>\n\n                          <div className=\"card\"/>\n                          <h2>病例报告 { province ? `· ${province.name}` : false }</h2>\n\n                          <Tabs type=\"primary\" defaultActiveKey=\"1\">\n                              <TabPane\n                                  tab={\n                        <span>\n                                 <span> &nbsp;&nbsp;</span><span>全球</span>\n                        </span>\n\n                      }\n                                  key=\"1\">\n\n\n                                  <WorldMap/>\n\n                              </TabPane>\n\n                              <TabPane\n                                  tab={\n                        <span>\n                                   国内\n                        </span>\n                      }\n                                  key=\"2\">\n                                  <ChinaMap/>\n                              </TabPane>\n                          </Tabs>,\n\n                          <div className=\"card\"/>\n\n                          <h2>进化变异 { province ? `· ${province.name}` : false }</h2>\n\n              <TreeMutation/>\n\n                          <div className=\"card\"/>\n                          <h2>单倍型 { province ? `· ${province.name}` : false }</h2>\n              <Haplotype/>\n\n              <div className=\"card\"/>\n              <h2>传播动态 { province ? `· ${province.name}` : false }</h2>\n                  <p><big>To be continued.</big></p>\n\n                  <MyFooter />\n          </div>\n      );\n    }\n}\n\n//<div className=\"card\"/>\n//<h2>传播动态 { province ? `· ${province.name}` : false }</h2>\n//    <p><big>To be continued.</big></p>\n\n\n// <Haplotype/>\n//<Haplotype data={this.state1.data} width={this.state1.width} height={this.state1.height} />\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}